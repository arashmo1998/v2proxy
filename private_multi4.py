import sys
import os
import colorama
from colorama import Fore, Style
import subprocess
from time import sleep
import readline
import io
import time


sys.stdout = io.TextIOWrapper(sys.stdout.detach(), encoding="utf-8", errors="replace")

if os.geteuid() != 0:
    print("\033[91mThis script must be run as root. Please use sudo -i.\033[0m")
    sys.exit(1)


def logo():
    logo_path = "/etc/logo2.sh"
    try:
        subprocess.run(["bash", "-c", logo_path], check=True)
    except subprocess.CalledProcessError as e:
        return e

    return None

def display_notification(message):
    print("\u2728 " + message)

def display_checkmark(message):
    print("\u2714 " + message)


# 5iran 10 kharej
def iran5_kharej10_mnu():
    os.system("clear")
    logo()
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]KHAREJ [5]IRAN \033[92m Multiple Servers\033[93m Menu\033[0m"
    )
    print('\033[92m "-"\033[93m════════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[93mPrivate IP [SIT]\033[0m")
    print("2. \033[96mEdit MTU\033[0m")
    print("3. \033[93mEdit Servers\033[0m")
    print("4. \033[91mUninstall\033[0m")
    print("0. \033[94mexit to the main script\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        choice = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if choice == "1":
            priviran5_mnu_ipnew()
            break
        elif choice == "2":
            mtu3_menu()
            break
        elif choice == "3":
            edit_server2()
            break
        elif choice == "4":
            remove3_menu()
            break
        elif choice == "0":
            os.system("clear")
            os._exit(0)
        else:
            print("Invalid choice.")


def priviran5_mnu_ipnew():
    while True:
        os.system("clear")
        print("\033[92m ^ ^\033[0m")
        print("\033[92m(\033[91mO,O\033[92m)\033[0m")
        print(
            "\033[92m(   ) \033[93mPrivate IP \033[92m[10]Kharej [5]IRAN\033[96m Config lists\033[93m Menu\033[0m"
        )
        print(
            '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
        )
        print("\033[93m╭───────────────────────────────────────╮\033[0m")
        print("\033[93mChoose what to do:\033[0m")
        print("1. \033[92mKharej[1]\033[0m")
        print("2. \033[92mKharej[2]\033[0m")
        print("3. \033[93mKharej[3]\033[0m")
        print("4. \033[92mKharej[4]\033[0m")
        print("5. \033[92mKharej[5]\033[0m")
        print("6. \033[92mKharej[6]\033[0m")
        print("7. \033[92mKharej[7]\033[0m")
        print("8. \033[93mKharej[8]\033[0m")
        print("9. \033[92mKharej[9]\033[0m")
        print("10.\033[92mKharej[10]\033[0m")
        print("\033[93m───────────────────────────────────────\033[0m")
        print("11.\033[97mIRAN SERVERS\033[0m")
        print("0. \033[94mback to the previous menu\033[0m")
        print("\033[93m╰───────────────────────────────────────╯\033[0m")

        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej1_private_menu_selection()
            break
        elif server_type == "2":
            kharej2_private_menu_selection()
            break
        elif server_type == "3":
            kharej3_private_menu_selection()
            break
        elif server_type == "4":
            kharej4_private_menu_selection()
            break
        elif server_type == "5":
            kharej5_private_menu_selection()
            break
        elif server_type == "6":
            kharej6_private_menu_selection()
            break
        elif server_type == "7":
            kharej7_private_menu_selection()
            break
        elif server_type == "8":
            kharej8_private_menu_selection()
            break
        elif server_type == "9":
            kharej9_private_menu_selection()
            break
        elif server_type == "10":
            kharej10_private_menu_selection()
            break
        elif server_type == "11":
            iran_private_menu_selection()
            break
        elif server_type == "0":
            os.system("clear")
            iran5_kharej10_mnu()
            break
        else:
            print("Invalid choice.")


def kharej1_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej1s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej2_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej2s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej3_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej3s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej4_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej4s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej5_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej5s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej6_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej6s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej7_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej7s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej8_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej8s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej9_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej9s{}_private_menu".format(i)
        globals()[menu_name]()


def kharej10_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mHow many \033[92mIRAN Servers\033[93m do you have?\033[96m (1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Please try again.\033[0m")
        return

    for i in range(1, iran_server_num + 1):
        menu_name = "kharej10s{}_private_menu".format(i)
        globals()[menu_name]()


def iran_private_menu_selection():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list[1] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mWhich \033[92mIRAN Server\033[93m are you configuring right now? \033[96m(1-5)\033[93m: \033[0m"
        )
    )
    num_servers = int(
        input(
            "\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[96m(1-10)\033[0m "
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server number. Please try again.\033[0m")
        return

    if num_servers < 1 or num_servers > 10:
        print("\033[91mWrong number of Kharej servers. Please try again.\033[0m")
        return

    for i in range(1, num_servers + 1):
        menu_name = "iran{}s{}_private_menu".format(i, iran_server_num)
        globals()[menu_name]()


## Kharej 1 servre 2
def adds2_cron1_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates21.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates21.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping1():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:701b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v61_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v61.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v61.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v61.service"])
    subprocess.run(["systemctl", "start", "pings2_v61.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v61.service"])


def kharej1s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [1]...\033[0m"
    )

    if os.path.isfile("/etc/privates21.sh"):
        os.remove("/etc/privates21.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:701b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:701b::2/64", "dev", "iran2config1"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:70{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates21.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config1 up\n")
        f.write("ip addr add 2002:701b::1/64 dev iran2config1\n")
        f.write("ip -6 route add 2002:701b::2/64 dev iran2config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:70{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config1\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config1 mtu {mtu_value}\n"
        with open("/etc/privates21.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron1_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping1()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:70{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:701b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v61.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v61.sh", 0o755)
    pings2_v61_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 2 server 2
def adds2_cron2_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates22.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates22.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping2():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:711b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v62.service"])
    subprocess.run(["systemctl", "start", "pings2_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v62.service"])


def pings1_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v62.service"])
    subprocess.run(["systemctl", "start", "pings1_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v62.service"])


def kharej2s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [2]...\033[0m"
    )

    if os.path.isfile("/etc/privates22.sh"):
        os.remove("/etc/privates22.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:711b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:711b::2/64", "dev", "iran2config2"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:71{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates22.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config2 up\n")
        f.write("ip addr add 2002:711b::1/64 dev iran2config2\n")
        f.write("ip -6 route add 2002:711b::2/64 dev iran2config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:71{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config2\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config2 mtu {mtu_value}\n"
        with open("/etc/privates22.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping2()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:71{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:711b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v62.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v62.sh", 0o755)
    pings2_v62_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 3 server 2
def adds2_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates23.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates23.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:721b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v63.service"])
    subprocess.run(["systemctl", "start", "pings2_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v63.service"])


def kharej3s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [3]...\033[0m"
    )

    if os.path.isfile("/etc/privates23.sh"):
        os.remove("/etc/privates23.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:721b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:721b::2/64", "dev", "iran2config3"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:72{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates23.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config3 up\n")
        f.write("ip addr add 2002:721b::1/64 dev iran2config3\n")
        f.write("ip -6 route add 2002:721b::2/64 dev iran2config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:72{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config3\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config3 mtu {mtu_value}\n"
        with open("/etc/privates23.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping3()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:72{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f"| {ip_addr}    |" + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:721b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v63.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v63.sh", 0o755)
    pings2_v63_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 4 server 2
def adds2_cron4_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates24.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates24.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping4():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:731b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v64_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v64.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v64.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v64.service"])
    subprocess.run(["systemctl", "start", "pings2_v64.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v64.service"])


def kharej4s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [4]...\033[0m"
    )

    if os.path.isfile("/etc/privates24.sh"):
        os.remove("/etc/privates24.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:731b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:731b::2/64", "dev", "iran2config4"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:73{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates24.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config4 up\n")
        f.write("ip addr add 2002:731b::1/64 dev iran2config4\n")
        f.write("ip -6 route add 2002:731b::2/64 dev iran2config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:73{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config4\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config4 mtu {mtu_value}\n"
        with open("/etc/privates24.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping4()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:73{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:731b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v64.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v64.sh", 0o755)
    pings2_v64_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 5 server 2
def adds2_cron5_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates25.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates25.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping5():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:741b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v65_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v65.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v65.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v65.service"])
    subprocess.run(["systemctl", "start", "pings2_v65.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v65.service"])


def kharej5s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [5]...\033[0m"
    )

    if os.path.isfile("/etc/privates25.sh"):
        os.remove("/etc/privates25.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:741b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:741b::2/64", "dev", "iran2config5"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:74{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates25.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config5 up\n")
        f.write("ip addr add 2002:741b::1/64 dev iran2config5\n")
        f.write("ip -6 route add 2002:741b::2/64 dev iran2config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:74{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config5\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config5 mtu {mtu_value}\n"
        with open("/etc/privates25.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping5()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:74{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:741b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v65.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v65.sh", 0o755)
    pings2_v65_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 6 server 2
def adds2_cron6_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates26.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates26.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping6():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:751b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v66_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v66.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v66.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v66.service"])
    subprocess.run(["systemctl", "start", "pings2_v66.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v66.service"])


def kharej6s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [6]...\033[0m"
    )

    if os.path.isfile("/etc/privates26.sh"):
        os.remove("/etc/privates26.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:751b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:751b::2/64", "dev", "iran2config6"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:75{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates26.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config6 up\n")
        f.write("ip addr add 2002:751b::1/64 dev iran2config6\n")
        f.write("ip -6 route add 2002:751b::2/64 dev iran2config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:75{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config6\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config6 mtu {mtu_value}\n"
        with open("/etc/privates26.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping6()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:75{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:751b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v66.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v66.sh", 0o755)
    pings2_v66_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 7
def adds2_cron7_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates27.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates27.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping7():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:761b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v67_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v67.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v67.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v67.service"])
    subprocess.run(["systemctl", "start", "pings2_v67.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v67.service"])


def kharej7s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [7]...\033[0m"
    )

    if os.path.isfile("/etc/privates27.sh"):
        os.remove("/etc/privates27.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:761b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:761b::2/64", "dev", "iran2config7"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:76{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates27.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config7 up\n")
        f.write("ip addr add 2002:761b::1/64 dev iran2config7\n")
        f.write("ip -6 route add 2002:761b::2/64 dev iran2config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:76{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config7\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config7 mtu {mtu_value}\n"
        with open("/etc/privates27.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping7()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:76{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:761b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v67.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v67.sh", 0o755)
    pings2_v67_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 8 server 2
def adds2_cron8_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates28.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates28.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping8():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:771b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v68_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v68.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v68.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v68.service"])
    subprocess.run(["systemctl", "start", "pings2_v68.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v68.service"])


def kharej8s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [8]...\033[0m"
    )

    if os.path.isfile("/etc/privates28.sh"):
        os.remove("/etc/privates28.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:771b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:771b::2/64", "dev", "iran2config8"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:77{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates28.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config8 up\n")
        f.write("ip addr add 2002:771b::1/64 dev iran2config8\n")
        f.write("ip -6 route add 2002:771b::2/64 dev iran2config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:77{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config8\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config8 mtu {mtu_value}\n"
        with open("/etc/privates28.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping8()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:77{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:771b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v68.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v68.sh", 0o755)
    pings2_v68_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 9 server 2


def adds2_cron9_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates29.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates29.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping9():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:781b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v69_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v69.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v69.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v69.service"])
    subprocess.run(["systemctl", "start", "pings2_v69.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v69.service"])


def kharej9s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [9]...\033[0m"
    )

    if os.path.isfile("/etc/privates29.sh"):
        os.remove("/etc/privates29.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:781b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:781b::2/64", "dev", "iran2config9"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:78{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates29.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config9 up\n")
        f.write("ip addr add 2002:781b::1/64 dev iran2config9\n")
        f.write("ip -6 route add 2002:781b::2/64 dev iran2config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:78{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config9\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config9 mtu {mtu_value}\n"
        with open("/etc/privates29.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping9()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:78{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:781b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v69.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings2_v69.sh", 0o755)
    pings2_v69_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 10 server 2


def adds2_cron10_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates210.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates210.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs2_ping10():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:791b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v610_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v610.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v610.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v610.service"])
    subprocess.run(["systemctl", "start", "pings2_v610.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v610.service"])


def kharej10s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [10]...\033[0m"
    )

    if os.path.isfile("/etc/privates210.sh"):
        os.remove("/etc/privates210.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:791b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:791b::2/64", "dev", "iran2config10"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:79{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates210.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config10 up\n")
        f.write("ip addr add 2002:791b::1/64 dev iran2config10\n")
        f.write("ip -6 route add 2002:791b::2/64 dev iran2config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:79{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran2config10\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config10 mtu {mtu_value}\n"
        with open("/etc/privates210.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs2_ping10()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:79{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:791b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/ping_v6s210.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/ping_v6s210.sh", 0o755)
    pings2_v610_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## IRAN1
def runs2_ping1_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:701b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran1s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[1]...\033[0m")

    if os.path.isfile("/etc/privates21.sh"):
        os.remove("/etc/privates21.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:701b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:701b::1/64", "dev", "iran2config1"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:70{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates21.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config1 up\n")
        f.write("ip addr add 2002:701b::2/64 dev iran2config1\n")
        f.write("ip -6 route add 2002:701b::1/64 dev iran2config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:70{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config1\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config1 mtu {mtu_value}\n"
        with open("/etc/privates21.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron1_job()

    sleep(1)
    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping1_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:70{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:701b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v61.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v61.sh", 0o755)
    pings2_v61_service()


## IRAN2 server 2
def runs2_ping2_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:711b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran2s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[2]...\033[0m")

    if os.path.isfile("/etc/privates22.sh"):
        os.remove("/etc/privates22.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:711b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:711b::1/64", "dev", "iran2config2"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:71{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates22.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config2 up\n")
        f.write("ip addr add 2002:711b::2/64 dev iran2config2\n")
        f.write("ip -6 route add 2002:711b::1/64 dev iran2config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:71{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config2\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config2 mtu {mtu_value}\n"
        with open("/etc/privates22.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping2_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:71{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:711b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v62.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v62.sh", 0o755)
    pings2_v62_service()


## IRAN3 server 2
def runs2_ping3_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:721b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran3s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[3]...\033[0m")

    if os.path.isfile("/etc/privates23.sh"):
        os.remove("/etc/privates23.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:721b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:721b::1/64", "dev", "iran2config3"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:72{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates23.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config3 up\n")
        f.write("ip addr add 2002:721b::2/64 dev iran2config3\n")
        f.write("ip -6 route add 2002:721b::1/64 dev iran2config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:72{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config3\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config3 mtu {mtu_value}\n"
        with open("/etc/privates23.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping3_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:72{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:721b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v63.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v63.sh", 0o755)
    pings2_v63_service()


## IRAN4
def runs2_ping4_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:731b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran4s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[4]...\033[0m")

    if os.path.isfile("/etc/privates24.sh"):
        os.remove("/etc/privates24.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:731b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:731b::1/64", "dev", "iran2config4"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:73{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates24.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config4 up\n")
        f.write("ip addr add 2002:731b::2/64 dev iran2config4\n")
        f.write("ip -6 route add 2002:731b::1/64 dev iran2config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:73{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config4\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config4 mtu {mtu_value}\n"
        with open("/etc/privates24.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping4_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:73{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:731b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v64.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v64.sh", 0o755)
    pings2_v64_service()


## IRAN5 server 2
def runs2_ping5_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:741b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran5s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[5]...\033[0m")

    if os.path.isfile("/etc/privates25.sh"):
        os.remove("/etc/privates25.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:741b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:741b::1/64", "dev", "iran2config5"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:74{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates25.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config5 up\n")
        f.write("ip addr add 2002:741b::2/64 dev iran2config5\n")
        f.write("ip -6 route add 2002:741b::1/64 dev iran2config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:74{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config5\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config5 mtu {mtu_value}\n"
        with open("/etc/privates25.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping5_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:74{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:741b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v65.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v65.sh", 0o755)
    pings2_v65_service()


## IRAN6 server 2
def runs2_ping6_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:751b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran6s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[6]...\033[0m")

    if os.path.isfile("/etc/privates26.sh"):
        os.remove("/etc/privates26.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:751b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:751b::1/64", "dev", "iran2config6"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:75{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates26.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config6 up\n")
        f.write("ip addr add 2002:751b::2/64 dev iran2config6\n")
        f.write("ip -6 route add 2002:751b::1/64 dev iran2config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:75{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config6\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config6 mtu {mtu_value}\n"
        with open("/etc/privates26.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping6_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:75{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:751b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v66.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v66.sh", 0o755)
    pings2_v66_service()


## IRAN7 server 2
def runs2_ping7_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:761b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran7s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[7]...\033[0m")

    if os.path.isfile("/etc/privates27.sh"):
        os.remove("/etc/privates27.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:761b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:761b::1/64", "dev", "iran2config7"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:76{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates27.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config7 up\n")
        f.write("ip addr add 2002:761b::2/64 dev iran2config7\n")
        f.write("ip -6 route add 2002:761b::1/64 dev iran2config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:76{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config7\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config7 mtu {mtu_value}\n"
        with open("/etc/privates27.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping7_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:76{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:761b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v67.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v67.sh", 0o755)
    pings2_v67_service()


## IRAN8 server 2
def runs2_ping8_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:771b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran8s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[8]...\033[0m")

    if os.path.isfile("/etc/privates28.sh"):
        os.remove("/etc/privates28.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:771b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:771b::1/64", "dev", "iran2config8"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:77{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates28.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config8 up\n")
        f.write("ip addr add 2002:771b::2/64 dev iran2config8\n")
        f.write("ip -6 route add 2002:771b::1/64 dev iran2config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:77{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config8\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config8 mtu {mtu_value}\n"
        with open("/etc/privates28.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping8_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:77{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:771b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v68.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v68.sh", 0o755)
    pings2_v68_service()


## IRAN9
def runs2_ping9_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:781b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran9s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[9]...\033[0m")

    if os.path.isfile("/etc/privates29.sh"):
        os.remove("/etc/privates29.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:781b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:781b::1/64", "dev", "iran2config9"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:78{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates29.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config9 up\n")
        f.write("ip addr add 2002:781b::2/64 dev iran2config9\n")
        f.write("ip -6 route add 2002:781b::1/64 dev iran2config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:78{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config9\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config9 mtu {mtu_value}\n"
        with open("/etc/privates29.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping9_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:78{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:781b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v69.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v69.sh", 0o755)
    pings2_v69_service()


## IRAN10 server 2s
def runs2_ping10_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:791b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran10s2_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[10]...\033[0m")

    if os.path.isfile("/etc/privates210.sh"):
        os.remove("/etc/privates210.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran2config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran2config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:791b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran2config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:791b::1/64", "dev", "iran2config10"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:79{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran2config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran2config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates210.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran2config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran2config10 up\n")
        f.write("ip addr add 2002:791b::2/64 dev iran2config10\n")
        f.write("ip -6 route add 2002:791b::1/64 dev iran2config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:79{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran2config10\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran2config10 mtu {mtu_value}\n"
        with open("/etc/privates210.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds2_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs2_ping10_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:79{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:791b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings2_v610.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings2_v610.sh", 0o755)
    pings2_v610_service()


# server 1 3iran 10kharej
def adds1_cron1_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates11.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates11.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping1():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:801b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v61_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v61.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v61.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v61.service"])
    subprocess.run(["systemctl", "start", "pings1_v61.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v61.service"])


def kharej1s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [1]...\033[0m"
    )

    if os.path.isfile("/etc/privates11.sh"):
        os.remove("/etc/privates11.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:801b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:801b::2/64", "dev", "iran1config1"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:80{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates11.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config1 up\n")
        f.write("ip addr add 2002:801b::1/64 dev iran1config1\n")
        f.write("ip -6 route add 2002:801b::2/64 dev iran1config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:80{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config1\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config1 mtu {mtu_value}\n"
        with open("/etc/privates11.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron1_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping1()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:80{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:801b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v61.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v61.sh", 0o755)
    pings1_v61_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 2 server 1
def adds1_cron2_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates12.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates12.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping2():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:811b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings2_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings2_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings2_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings2_v62.service"])
    subprocess.run(["systemctl", "start", "pings2_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings2_v62.service"])


def kharej2s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [2]...\033[0m"
    )

    if os.path.isfile("/etc/privates12.sh"):
        os.remove("/etc/privates12.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:811b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:811b::2/64", "dev", "iran1config2"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:81{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates12.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config2 up\n")
        f.write("ip addr add 2002:811b::1/64 dev iran1config2\n")
        f.write("ip -6 route add 2002:811b::2/64 dev iran1config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:81{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config2\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config2 mtu {mtu_value}\n"
        with open("/etc/privates12.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping2()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:81{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:811b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v62.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v62.sh", 0o755)
    pings1_v62_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 3 server 1
def adds1_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates13.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates13.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:821b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v63.service"])
    subprocess.run(["systemctl", "start", "pings1_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v63.service"])


def adds1_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates13.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates13.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:821b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v63.service"])
    subprocess.run(["systemctl", "start", "pings1_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v63.service"])


def kharej3s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [3]...\033[0m"
    )

    if os.path.isfile("/etc/privates13.sh"):
        os.remove("/etc/privates13.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:821b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:821b::2/64", "dev", "iran1config3"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:82{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates13.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config3 up\n")
        f.write("ip addr add 2002:821b::1/64 dev iran1config3\n")
        f.write("ip -6 route add 2002:821b::2/64 dev iran1config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:82{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config3\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config3 mtu {mtu_value}\n"
        with open("/etc/privates13.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping3()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:82{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f"| {ip_addr}    |" + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:821b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v63.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v63.sh", 0o755)
    pings1_v63_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 4 server 1
def adds1_cron4_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates14.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates14.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping4():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:831b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v64_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v64.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v64.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v64.service"])
    subprocess.run(["systemctl", "start", "pings1_v64.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v64.service"])


def kharej4s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [4]...\033[0m"
    )

    if os.path.isfile("/etc/privates14.sh"):
        os.remove("/etc/privates14.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:831b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:831b::2/64", "dev", "iran1config4"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:83{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates14.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config4 up\n")
        f.write("ip addr add 2002:831b::1/64 dev iran1config4\n")
        f.write("ip -6 route add 2002:831b::2/64 dev iran1config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:83{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config4\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config4 mtu {mtu_value}\n"
        with open("/etc/privates14.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping4()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:83{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:831b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v64.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v64.sh", 0o755)
    pings1_v64_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 5 server 1
def adds1_cron5_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates15.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates15.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping5():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:841b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v65_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v65.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v65.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v65.service"])
    subprocess.run(["systemctl", "start", "pings1_v65.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v65.service"])


def kharej5s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [5]...\033[0m"
    )

    if os.path.isfile("/etc/privates15.sh"):
        os.remove("/etc/privates15.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:841b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:841b::2/64", "dev", "iran1config5"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:84{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates15.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config5 up\n")
        f.write("ip addr add 2002:841b::1/64 dev iran1config5\n")
        f.write("ip -6 route add 2002:841b::2/64 dev iran1config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:84{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config5\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config5 mtu {mtu_value}\n"
        with open("/etc/privates15.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping5()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:84{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:841b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v65.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v65.sh", 0o755)
    pings1_v65_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 6 server 1
def adds1_cron6_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates16.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates16.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping6():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:851b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v66_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v66.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v66.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v66.service"])
    subprocess.run(["systemctl", "start", "pings1_v66.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v66.service"])


def kharej6s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [6]...\033[0m"
    )

    if os.path.isfile("/etc/privates16.sh"):
        os.remove("/etc/privates16.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:851b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:851b::2/64", "dev", "iran1config6"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:85{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates16.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config6 up\n")
        f.write("ip addr add 2002:851b::1/64 dev iran1config6\n")
        f.write("ip -6 route add 2002:851b::2/64 dev iran1config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:85{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config6\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config6 mtu {mtu_value}\n"
        with open("/etc/privates16.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping6()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:85{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:851b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v66.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v66.sh", 0o755)
    pings1_v66_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 7 server 1
def adds1_cron7_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates17.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates17.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping7():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:861b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v67_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v67.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v67.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v67.service"])
    subprocess.run(["systemctl", "start", "pings1_v67.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v67.service"])


def kharej7s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [7]...\033[0m"
    )

    if os.path.isfile("/etc/privates17.sh"):
        os.remove("/etc/privates17.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:861b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:861b::2/64", "dev", "iran1config7"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:86{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates17.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config7 up\n")
        f.write("ip addr add 2002:861b::1/64 dev iran1config7\n")
        f.write("ip -6 route add 2002:861b::2/64 dev iran1config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:86{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config7\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config7 mtu {mtu_value}\n"
        with open("/etc/privates17.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping7()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:86{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:861b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v67.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v67.sh", 0o755)
    pings1_v67_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 8 server 1
def adds1_cron8_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates18.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates18.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping8():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:871b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v68_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v68.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v68.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v68.service"])
    subprocess.run(["systemctl", "start", "pings1_v68.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v68.service"])


def kharej8s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [8]...\033[0m"
    )

    if os.path.isfile("/etc/privates18.sh"):
        os.remove("/etc/privates18.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:871b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:871b::2/64", "dev", "iran1config8"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:87{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates18.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config8 up\n")
        f.write("ip addr add 2002:871b::1/64 dev iran1config8\n")
        f.write("ip -6 route add 2002:871b::2/64 dev iran1config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:87{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config8\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config8 mtu {mtu_value}\n"
        with open("/etc/privates18.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping8()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:87{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:871b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v68.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v68.sh", 0o755)
    pings1_v68_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 9 server 1


def adds1_cron9_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates19.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates19.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping9():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:881b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v69_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v69.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v69.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v69.service"])
    subprocess.run(["systemctl", "start", "pings1_v69.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v69.service"])


def kharej9s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [9]...\033[0m"
    )

    if os.path.isfile("/etc/privates19.sh"):
        os.remove("/etc/privates19.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:881b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:881b::2/64", "dev", "iran1config9"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:88{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates19.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config9 up\n")
        f.write("ip addr add 2002:881b::1/64 dev iran1config9\n")
        f.write("ip -6 route add 2002:881b::2/64 dev iran1config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:88{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config9\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config9 mtu {mtu_value}\n"
        with open("/etc/privates19.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping9()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:88{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:881b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v69.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v69.sh", 0o755)
    pings1_v69_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 10 server 1


def adds1_cron10_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates110.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates110.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs1_ping10():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:891b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings1_v610_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings1_v610.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings1_v610.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings1_v610.service"])
    subprocess.run(["systemctl", "start", "pings1_v610.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings1_v610.service"])


def kharej10s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [10]...\033[0m"
    )

    if os.path.isfile("/etc/privates110.sh"):
        os.remove("/etc/privates110.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:891b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:891b::2/64", "dev", "iran1config10"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:89{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates110.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config10 up\n")
        f.write("ip addr add 2002:891b::1/64 dev iran1config10\n")
        f.write("ip -6 route add 2002:891b::2/64 dev iran1config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:89{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran1config10\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config10 mtu {mtu_value}\n"
        with open("/etc/privates110.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs1_ping10()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:89{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:891b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v610.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings1_v610.sh", 0o755)
    pings1_v610_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## IRAN1
def runs1_ping1_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:801b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran1s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[1]...\033[0m")

    if os.path.isfile("/etc/privates11.sh"):
        os.remove("/etc/privates11.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:801b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:801b::1/64", "dev", "iran1config1"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:80{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates11.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config1 up\n")
        f.write("ip addr add 2002:801b::2/64 dev iran1config1\n")
        f.write("ip -6 route add 2002:801b::1/64 dev iran1config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:80{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config1\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config1 mtu {mtu_value}\n"
        with open("/etc/privates11.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron1_job()

    sleep(1)
    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping1_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:80{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:801b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v61.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v61.sh", 0o755)
    pings1_v61_service()


## IRAN2 server 1
def runs1_ping2_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:811b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran2s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[2]...\033[0m")

    if os.path.isfile("/etc/privates12.sh"):
        os.remove("/etc/privates12.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:811b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:811b::1/64", "dev", "iran1config2"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:81{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates12.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config2 up\n")
        f.write("ip addr add 2002:811b::2/64 dev iran1config2\n")
        f.write("ip -6 route add 2002:811b::1/64 dev iran1config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:81{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config2\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config2 mtu {mtu_value}\n"
        with open("/etc/privates12.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping2_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:81{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:811b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v62.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v62.sh", 0o755)
    pings1_v62_service()


## IRAN3 server 1
def runs1_ping3_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:821b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran3s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[3]...\033[0m")

    if os.path.isfile("/etc/privates13.sh"):
        os.remove("/etc/privates13.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:821b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:821b::1/64", "dev", "iran1config3"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:82{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates13.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config3 up\n")
        f.write("ip addr add 2002:821b::2/64 dev iran1config3\n")
        f.write("ip -6 route add 2002:821b::1/64 dev iran1config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:82{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config3\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config3 mtu {mtu_value}\n"
        with open("/etc/privates13.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping3_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:82{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:821b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v63.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v63.sh", 0o755)
    pings1_v63_service()


## IRAN4 server 1
def runs1_ping4_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:831b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran4s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[4]...\033[0m")

    if os.path.isfile("/etc/privates14.sh"):
        os.remove("/etc/privates14.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:831b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:831b::1/64", "dev", "iran1config4"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:83{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates14.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config4 up\n")
        f.write("ip addr add 2002:831b::2/64 dev iran1config4\n")
        f.write("ip -6 route add 2002:831b::1/64 dev iran1config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:83{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config4\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config4 mtu {mtu_value}\n"
        with open("/etc/privates14.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping4_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:83{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:831b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v64.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v64.sh", 0o755)
    pings1_v64_service()


## IRAN5 server 1
def runs1_ping5_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:841b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran5s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[5]...\033[0m")

    if os.path.isfile("/etc/privates15.sh"):
        os.remove("/etc/privates15.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:841b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:841b::1/64", "dev", "iran1config5"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:84{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates15.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config5 up\n")
        f.write("ip addr add 2002:841b::2/64 dev iran1config5\n")
        f.write("ip -6 route add 2002:841b::1/64 dev iran1config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:84{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config5\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config5 mtu {mtu_value}\n"
        with open("/etc/privates15.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping5_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:84{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:841b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v65.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v65.sh", 0o755)
    pings1_v65_service()


## IRAN6 server 1
def runs1_ping6_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:851b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran6s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[6]...\033[0m")

    if os.path.isfile("/etc/privates16.sh"):
        os.remove("/etc/privates16.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:851b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:851b::1/64", "dev", "iran1config6"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:85{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates16.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config6 up\n")
        f.write("ip addr add 2002:851b::2/64 dev iran1config6\n")
        f.write("ip -6 route add 2002:851b::1/64 dev iran1config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:85{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config6\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config6 mtu {mtu_value}\n"
        with open("/etc/privates16.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping6_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:85{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:851b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v66.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v66.sh", 0o755)
    pings1_v66_service()


## IRAN7 server 1
def runs1_ping7_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:861b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran7s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[7]...\033[0m")

    if os.path.isfile("/etc/privates17.sh"):
        os.remove("/etc/privates17.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:861b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:861b::1/64", "dev", "iran1config7"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:86{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates17.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config7 up\n")
        f.write("ip addr add 2002:861b::2/64 dev iran1config7\n")
        f.write("ip -6 route add 2002:861b::1/64 dev iran1config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:86{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config7\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config7 mtu {mtu_value}\n"
        with open("/etc/privates17.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping7_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:86{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:861b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v67.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v67.sh", 0o755)
    pings1_v67_service()


## IRAN8 server 1
def runs1_ping8_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:871b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran8s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[8]...\033[0m")

    if os.path.isfile("/etc/privates18.sh"):
        os.remove("/etc/privates18.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:871b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:871b::1/64", "dev", "iran1config8"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:87{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates18.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config8 up\n")
        f.write("ip addr add 2002:871b::2/64 dev iran1config8\n")
        f.write("ip -6 route add 2002:871b::1/64 dev iran1config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:87{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config8\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config8 mtu {mtu_value}\n"
        with open("/etc/privates18.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping8_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:87{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:871b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v68.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v68.sh", 0o755)
    pings1_v68_service()


## IRAN9 server 1
def runs1_ping9_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:881b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran9s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[9]...\033[0m")

    if os.path.isfile("/etc/privates19.sh"):
        os.remove("/etc/privates19.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:881b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:881b::1/64", "dev", "iran1config9"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:88{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates19.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config9 up\n")
        f.write("ip addr add 2002:881b::2/64 dev iran1config9\n")
        f.write("ip -6 route add 2002:881b::1/64 dev iran1config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:88{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config9\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config9 mtu {mtu_value}\n"
        with open("/etc/privates19.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping9_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:88{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:881b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v69.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v69.sh", 0o755)
    pings1_v69_service()


## IRAN10 server 1s
def runs1_ping10_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:891b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran10s1_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[10]...\033[0m")

    if os.path.isfile("/etc/privates110.sh"):
        os.remove("/etc/privates110.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran1config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran1config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:891b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran1config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:891b::1/64", "dev", "iran1config10"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:89{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran1config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran1config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates110.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran1config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran1config10 up\n")
        f.write("ip addr add 2002:891b::2/64 dev iran1config10\n")
        f.write("ip -6 route add 2002:891b::1/64 dev iran1config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:89{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran1config10\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran1config10 mtu {mtu_value}\n"
        with open("/etc/privates110.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds1_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs1_ping10_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:89{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:891b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings1_v610.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings1_v610.sh", 0o755)
    pings1_v610_service()


# server 3 iran for 10 kharej 5 iran


def kharej_private_5iranmenu3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93mPrivate IP \033\033[92m[10]Kharej [5]IRAN\033[96m Config list [3]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[92mKharej[2]\033[0m")
    print("3. \033[93mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[92mKharej[7]\033[0m")
    print("8. \033[93mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej1s3_private_menu()
            break
        elif server_type == "2":
            kharej2s3_private_menu()
            break
        elif server_type == "3":
            kharej3s3_private_menu()
            break
        elif server_type == "4":
            kharej4s3_private_menu()
            break
        elif server_type == "5":
            kharej5s3_private_menu()
            break
        elif server_type == "6":
            kharej6s3_private_menu()
            break
        elif server_type == "7":
            kharej7s3_private_menu()
            break
        elif server_type == "8":
            kharej8s3_private_menu()
            break
        elif server_type == "9":
            kharej9s3_private_menu()
            break
        elif server_type == "10":
            kharej10s3_private_menu()
            break
        elif server_type == "0":
            os.system("clear")
            priviran5_kh_ip3() # type: ignore
            break
        else:
            print("Invalid choice.")


def iran_private_5iranmenu3():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10]KHAREJ [5]IRAN - Config list [3] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mkharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "iran{}s3_private_menu".format(i)
        globals()[menu_name]()


## Kharej 1 server 3
def adds3_cron1_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates31.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates31.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping1():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:601b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v61_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v61.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v61.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v61.service"])
    subprocess.run(["systemctl", "start", "pings3_v61.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v61.service"])


def kharej1s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [1]...\033[0m"
    )

    if os.path.isfile("/etc/privates31.sh"):
        os.remove("/etc/privates31.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:601b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:601b::2/64", "dev", "iran3config1"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:60{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates31.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config1 up\n")
        f.write("ip addr add 2002:601b::1/64 dev iran3config1\n")
        f.write("ip -6 route add 2002:601b::2/64 dev iran3config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:60{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config1\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config1 mtu {mtu_value}\n"
        with open("/etc/privates31.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron1_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping1()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:60{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:601b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v61.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v61.sh", 0o755)
    pings3_v61_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 2 server 3
def adds3_cron2_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates32.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates32.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping2():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:611b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v62.service"])
    subprocess.run(["systemctl", "start", "pings3_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v62.service"])


def kharej2s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [2]...\033[0m"
    )

    if os.path.isfile("/etc/privates32.sh"):
        os.remove("/etc/privates32.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:611b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:611b::2/64", "dev", "iran3config2"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:61{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates32.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config2 up\n")
        f.write("ip addr add 2002:611b::1/64 dev iran3config2\n")
        f.write("ip -6 route add 2002:611b::2/64 dev iran3config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:61{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config2\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config2 mtu {mtu_value}\n"
        with open("/etc/privates32.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping2()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:61{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:611b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v62.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v62.sh", 0o755)
    pings3_v62_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 3 server 3
def adds3_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates33.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates33.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:621b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v63.service"])
    subprocess.run(["systemctl", "start", "pings3_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v63.service"])


def kharej3s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [3]...\033[0m"
    )

    if os.path.isfile("/etc/privates33.sh"):
        os.remove("/etc/privates33.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:621b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:621b::2/64", "dev", "iran3config3"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:62{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates33.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config3 up\n")
        f.write("ip addr add 2002:621b::1/64 dev iran3config3\n")
        f.write("ip -6 route add 2002:621b::2/64 dev iran3config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:62{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config3\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config3 mtu {mtu_value}\n"
        with open("/etc/privates33.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping3()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:62{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f"| {ip_addr}    |" + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:621b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v63.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v63.sh", 0o755)
    pings3_v63_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 4 server 3
def adds3_cron4_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates34.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates34.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping4():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:631b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v64_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v64.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v64.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v64.service"])
    subprocess.run(["systemctl", "start", "pings3_v64.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v64.service"])


def kharej4s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [4]...\033[0m"
    )

    if os.path.isfile("/etc/privates34.sh"):
        os.remove("/etc/privates34.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:631b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:631b::2/64", "dev", "iran3config4"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:63{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates34.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config4 up\n")
        f.write("ip addr add 2002:631b::1/64 dev iran3config4\n")
        f.write("ip -6 route add 2002:631b::2/64 dev iran3config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:63{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config4\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config4 mtu {mtu_value}\n"
        with open("/etc/privates34.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping4()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:63{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:631b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v64.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v64.sh", 0o755)
    pings3_v64_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 5 server 3
def adds3_cron5_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates35.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates35.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping5():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:641b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v65_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v65.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v65.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v65.service"])
    subprocess.run(["systemctl", "start", "pings3_v65.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v65.service"])


def kharej5s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [5]...\033[0m"
    )

    if os.path.isfile("/etc/privates35.sh"):
        os.remove("/etc/privates35.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:641b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:641b::2/64", "dev", "iran3config5"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:64{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates35.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config5 up\n")
        f.write("ip addr add 2002:641b::1/64 dev iran3config5\n")
        f.write("ip -6 route add 2002:641b::2/64 dev iran3config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:64{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config5\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config5 mtu {mtu_value}\n"
        with open("/etc/privates35.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping5()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:64{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:641b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v65.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v65.sh", 0o755)
    pings3_v65_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 6 server 3
def adds3_cron6_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates36.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates36.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping6():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:651b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v66_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v66.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v66.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v66.service"])
    subprocess.run(["systemctl", "start", "pings3_v66.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v66.service"])


def kharej6s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [6]...\033[0m"
    )

    if os.path.isfile("/etc/privates36.sh"):
        os.remove("/etc/privates36.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:651b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:651b::2/64", "dev", "iran3config6"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:65{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates36.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config6 up\n")
        f.write("ip addr add 2002:651b::1/64 dev iran3config6\n")
        f.write("ip -6 route add 2002:651b::2/64 dev iran3config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:65{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config6\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config6 mtu {mtu_value}\n"
        with open("/etc/privates36.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping6()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:65{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:651b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v66.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v66.sh", 0o755)
    pings3_v66_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 7 server 3
def adds3_cron7_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates37.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates37.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping7():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:661b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v67_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v67.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v67.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v67.service"])
    subprocess.run(["systemctl", "start", "pings3_v67.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v67.service"])


def kharej7s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [7]...\033[0m"
    )

    if os.path.isfile("/etc/privates37.sh"):
        os.remove("/etc/privates37.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:661b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:661b::2/64", "dev", "iran3config7"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:66{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates37.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config7 up\n")
        f.write("ip addr add 2002:661b::1/64 dev iran3config7\n")
        f.write("ip -6 route add 2002:661b::2/64 dev iran3config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:66{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config7\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config7 mtu {mtu_value}\n"
        with open("/etc/privates37.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping7()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:66{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:661b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v67.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v67.sh", 0o755)
    pings3_v67_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 8 server 3
def adds3_cron8_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates38.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates38.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping8():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:671b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v68_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v68.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v68.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v68.service"])
    subprocess.run(["systemctl", "start", "pings3_v68.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v68.service"])


def kharej8s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [8]...\033[0m"
    )

    if os.path.isfile("/etc/privates38.sh"):
        os.remove("/etc/privates38.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:671b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:671b::2/64", "dev", "iran3config8"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:67{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates38.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config8 up\n")
        f.write("ip addr add 2002:671b::1/64 dev iran3config8\n")
        f.write("ip -6 route add 2002:671b::2/64 dev iran3config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:67{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config8\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config8 mtu {mtu_value}\n"
        with open("/etc/privates38.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping8()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:67{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:671b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v68.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v68.sh", 0o755)
    pings3_v68_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 9 server 3


def adds3_cron9_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates39.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates39.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping9():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:681b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v69_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v69.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v69.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v69.service"])
    subprocess.run(["systemctl", "start", "pings3_v69.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v69.service"])


def kharej9s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [9]...\033[0m"
    )

    if os.path.isfile("/etc/privates39.sh"):
        os.remove("/etc/privates39.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:681b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:681b::2/64", "dev", "iran3config9"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:68{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates39.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config9 up\n")
        f.write("ip addr add 2002:681b::1/64 dev iran3config9\n")
        f.write("ip -6 route add 2002:681b::2/64 dev iran3config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:68{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config9\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config9 mtu {mtu_value}\n"
        with open("/etc/privates39.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping9()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:68{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:681b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v69.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings3_v69.sh", 0o755)
    pings3_v69_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 10 server 3


def adds3_cron10_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates310.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates310.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs3_ping10():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:691b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings3_v610_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings3_v610.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings3_v610.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings3_v610.service"])
    subprocess.run(["systemctl", "start", "pings3_v610.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings3_v610.service"])


def kharej10s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [10]...\033[0m"
    )

    if os.path.isfile("/etc/privates310.sh"):
        os.remove("/etc/privates310.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:691b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:691b::2/64", "dev", "iran3config10"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:69{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates310.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config10 up\n")
        f.write("ip addr add 2002:691b::1/64 dev iran3config10\n")
        f.write("ip -6 route add 2002:691b::2/64 dev iran3config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:69{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran3config10\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config10 mtu {mtu_value}\n"
        with open("/etc/privates310.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs3_ping10()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:69{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:691b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/ping_v6s310.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/ping_v6s310.sh", 0o755)
    pings3_v610_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## IRAN1
def runs3_ping1_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:601b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran1s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[1]...\033[0m")

    if os.path.isfile("/etc/privates31.sh"):
        os.remove("/etc/privates31.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:601b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:601b::1/64", "dev", "iran3config1"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:60{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates31.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config1 up\n")
        f.write("ip addr add 2002:601b::2/64 dev iran3config1\n")
        f.write("ip -6 route add 2002:601b::1/64 dev iran3config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:60{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config1\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config1 mtu {mtu_value}\n"
        with open("/etc/privates31.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron1_job()

    sleep(1)
    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping1_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:60{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:601b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v61.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v61.sh", 0o755)
    pings3_v61_service()


## IRAN2 server 3
def runs3_ping2_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:611b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran2s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[2]...\033[0m")

    if os.path.isfile("/etc/privates32.sh"):
        os.remove("/etc/privates32.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:611b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:611b::1/64", "dev", "iran3config2"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:61{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates32.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config2 up\n")
        f.write("ip addr add 2002:611b::2/64 dev iran3config2\n")
        f.write("ip -6 route add 2002:611b::1/64 dev iran3config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:61{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config2\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config2 mtu {mtu_value}\n"
        with open("/etc/privates32.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping2_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:61{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:611b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v62.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v62.sh", 0o755)
    pings3_v62_service()


## IRAN3 server 3
def runs3_ping3_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:621b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran3s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[3]...\033[0m")

    if os.path.isfile("/etc/privates33.sh"):
        os.remove("/etc/privates33.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:621b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:621b::1/64", "dev", "iran3config3"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:62{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates33.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config3 up\n")
        f.write("ip addr add 2002:621b::2/64 dev iran3config3\n")
        f.write("ip -6 route add 2002:621b::1/64 dev iran3config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:62{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config3\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config3 mtu {mtu_value}\n"
        with open("/etc/privates33.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping3_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:62{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:621b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v63.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v63.sh", 0o755)
    pings3_v63_service()


## IRAN4 server 3
def runs3_ping4_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:631b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran4s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[4]...\033[0m")

    if os.path.isfile("/etc/privates34.sh"):
        os.remove("/etc/privates34.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:631b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:631b::1/64", "dev", "iran3config4"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:63{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates34.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config4 up\n")
        f.write("ip addr add 2002:631b::2/64 dev iran3config4\n")
        f.write("ip -6 route add 2002:631b::1/64 dev iran3config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:63{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config4\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config4 mtu {mtu_value}\n"
        with open("/etc/privates34.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping4_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:63{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:631b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v64.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v64.sh", 0o755)
    pings3_v64_service()


## IRAN5 server 3
def runs3_ping5_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:641b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran5s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[5]...\033[0m")

    if os.path.isfile("/etc/privates35.sh"):
        os.remove("/etc/privates35.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:641b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:641b::1/64", "dev", "iran3config5"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:64{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates35.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config5 up\n")
        f.write("ip addr add 2002:641b::2/64 dev iran3config5\n")
        f.write("ip -6 route add 2002:641b::1/64 dev iran3config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:64{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config5\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config5 mtu {mtu_value}\n"
        with open("/etc/privates35.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping5_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:64{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:641b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v65.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v65.sh", 0o755)
    pings3_v65_service()


## IRAN6 server 3
def runs3_ping6_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:651b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran6s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[6]...\033[0m")

    if os.path.isfile("/etc/privates36.sh"):
        os.remove("/etc/privates36.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:651b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:651b::1/64", "dev", "iran3config6"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:65{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates36.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config6 up\n")
        f.write("ip addr add 2002:651b::2/64 dev iran3config6\n")
        f.write("ip -6 route add 2002:651b::1/64 dev iran3config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:65{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config6\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config6 mtu {mtu_value}\n"
        with open("/etc/privates36.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping6_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:65{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:651b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v66.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v66.sh", 0o755)
    pings3_v66_service()


## IRAN7 server 3
def runs3_ping7_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:661b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran7s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[7]...\033[0m")

    if os.path.isfile("/etc/privates37.sh"):
        os.remove("/etc/privates37.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:661b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:661b::1/64", "dev", "iran3config7"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:66{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates37.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config7 up\n")
        f.write("ip addr add 2002:661b::2/64 dev iran3config7\n")
        f.write("ip -6 route add 2002:661b::1/64 dev iran3config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:66{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config7\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config7 mtu {mtu_value}\n"
        with open("/etc/privates37.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping7_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:66{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:661b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v67.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v67.sh", 0o755)
    pings3_v67_service()


## IRAN8 server 3
def runs3_ping8_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:671b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran8s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[8]...\033[0m")

    if os.path.isfile("/etc/privates38.sh"):
        os.remove("/etc/privates38.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:671b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:671b::1/64", "dev", "iran3config8"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:67{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates38.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config8 up\n")
        f.write("ip addr add 2002:671b::2/64 dev iran3config8\n")
        f.write("ip -6 route add 2002:671b::1/64 dev iran3config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:67{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config8\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config8 mtu {mtu_value}\n"
        with open("/etc/privates38.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping8_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:67{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:671b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v68.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v68.sh", 0o755)
    pings3_v68_service()


## IRAN9 server 3
def runs3_ping9_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:681b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran9s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[9]...\033[0m")

    if os.path.isfile("/etc/privates39.sh"):
        os.remove("/etc/privates39.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:681b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:681b::1/64", "dev", "iran3config9"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:68{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates39.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config9 up\n")
        f.write("ip addr add 2002:681b::2/64 dev iran3config9\n")
        f.write("ip -6 route add 2002:681b::1/64 dev iran3config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:68{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config9\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config9 mtu {mtu_value}\n"
        with open("/etc/privates39.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping9_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:68{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:681b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v69.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v69.sh", 0o755)
    pings3_v69_service()


## IRAN10 server 3
def runs3_ping10_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:691b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran10s3_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[10]...\033[0m")

    if os.path.isfile("/etc/privates310.sh"):
        os.remove("/etc/privates310.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server [3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran3config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran3config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:691b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran3config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:691b::1/64", "dev", "iran3config10"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:69{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran3config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran3config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates310.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran3config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran3config10 up\n")
        f.write("ip addr add 2002:691b::2/64 dev iran3config10\n")
        f.write("ip -6 route add 2002:691b::1/64 dev iran3config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:69{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran3config10\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran3config10 mtu {mtu_value}\n"
        with open("/etc/privates310.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds3_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs3_ping10_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:69{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:691b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings3_v610.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings3_v610.sh", 0o755)
    pings3_v610_service()


# iran server 4 for 5 iran 10 kharej


def priviran5_kh_ip4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93mPrivate IP \033[92m[10]Kharej [5]IRAN\033[96m Config list [4]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose Which server:\033[0m")
    print("1. \033[92mKHAREJ\033[0m")
    print("2. \033[93mIRAN\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej_private_5iranmenu4()
            break
        elif server_type == "2":
            iran_private_5iranmenu4()
            break
        elif server_type == "0":
            os.system("clear")
            priviran5_mnu_ip() # type: ignore
            break
        else:
            print("Invalid choice.")


def kharej_private_5iranmenu4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93mPrivate IP \033[92m[10]Kharej [5]IRAN\033[96m Config list [4]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[92mKharej[2]\033[0m")
    print("3. \033[93mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[92mKharej[7]\033[0m")
    print("8. \033[93mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej1s4_private_menu()
            break
        elif server_type == "2":
            kharej2s4_private_menu()
            break
        elif server_type == "3":
            kharej3s4_private_menu()
            break
        elif server_type == "4":
            kharej4s4_private_menu()
            break
        elif server_type == "5":
            kharej5s4_private_menu()
            break
        elif server_type == "6":
            kharej6s4_private_menu()
            break
        elif server_type == "7":
            kharej7s4_private_menu()
            break
        elif server_type == "8":
            kharej8s4_private_menu()
            break
        elif server_type == "9":
            kharej9s4_private_menu()
            break
        elif server_type == "10":
            kharej10s4_private_menu()
            break
        elif server_type == "0":
            os.system("clear")
            priviran5_mnu_ip() # type: ignore
            break
        else:
            print("Invalid choice.")


def iran_private_5iranmenu4():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10]KHAREJ [5]IRAN - Config list [2] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mkharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "iran{}s4_private_menu".format(i)
        globals()[menu_name]()


## Kharej 1 server 4
def adds4_cron1_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates41.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates41.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping1():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:501b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v61_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v61.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v61.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v61.service"])
    subprocess.run(["systemctl", "start", "pings4_v61.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v61.service"])


def kharej1s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [1]...\033[0m"
    )

    if os.path.isfile("/etc/privates41.sh"):
        os.remove("/etc/privates41.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:501b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:501b::2/64", "dev", "iran4config1"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:50{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates41.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config1 up\n")
        f.write("ip addr add 2002:501b::1/64 dev iran4config1\n")
        f.write("ip -6 route add 2002:501b::2/64 dev iran4config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:50{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config1\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config1 mtu {mtu_value}\n"
        with open("/etc/privates41.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron1_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping1()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:50{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:501b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v61.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v61.sh", 0o755)
    pings4_v61_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 2 server 4
def adds4_cron2_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates42.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates42.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping2():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:511b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v62.service"])
    subprocess.run(["systemctl", "start", "pings4_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v62.service"])


def kharej2s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [2]...\033[0m"
    )

    if os.path.isfile("/etc/privates42.sh"):
        os.remove("/etc/privates42.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:511b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:511b::2/64", "dev", "iran4config2"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:51{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates42.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config2 up\n")
        f.write("ip addr add 2002:511b::1/64 dev iran4config2\n")
        f.write("ip -6 route add 2002:511b::2/64 dev iran4config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:51{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config2\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config2 mtu {mtu_value}\n"
        with open("/etc/privates42.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping2()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:51{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:511b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v62.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v62.sh", 0o755)
    pings4_v62_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 3 server 4
def adds4_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates43.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates43.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:521b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v63.service"])
    subprocess.run(["systemctl", "start", "pings4_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v63.service"])


def kharej3s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [3]...\033[0m"
    )

    if os.path.isfile("/etc/privates43.sh"):
        os.remove("/etc/privates43.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:521b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:521b::2/64", "dev", "iran4config3"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:52{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates43.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config3 up\n")
        f.write("ip addr add 2002:521b::1/64 dev iran4config3\n")
        f.write("ip -6 route add 2002:521b::2/64 dev iran4config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:52{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config3\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config3 mtu {mtu_value}\n"
        with open("/etc/privates43.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping3()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:52{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f"| {ip_addr}    |" + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:521b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v63.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v63.sh", 0o755)
    pings4_v63_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 4 server 4
def adds4_cron4_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates44.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates44.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping4():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:531b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v64_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v64.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v64.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v64.service"])
    subprocess.run(["systemctl", "start", "pings4_v64.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v64.service"])


def kharej4s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [4]...\033[0m"
    )

    if os.path.isfile("/etc/privates44.sh"):
        os.remove("/etc/privates44.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:531b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:531b::2/64", "dev", "iran4config4"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:53{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates44.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config4 up\n")
        f.write("ip addr add 2002:531b::1/64 dev iran4config4\n")
        f.write("ip -6 route add 2002:531b::2/64 dev iran4config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:53{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config4\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config4 mtu {mtu_value}\n"
        with open("/etc/privates44.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping4()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:53{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:531b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v64.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v64.sh", 0o755)
    pings4_v64_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 5 server 4
def adds4_cron5_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates45.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates45.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping5():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:541b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v65_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v65.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v65.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v65.service"])
    subprocess.run(["systemctl", "start", "pings4_v65.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v65.service"])


def kharej5s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [5]...\033[0m"
    )

    if os.path.isfile("/etc/privates45.sh"):
        os.remove("/etc/privates45.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:541b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:541b::2/64", "dev", "iran4config5"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:54{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates45.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config5 up\n")
        f.write("ip addr add 2002:541b::1/64 dev iran4config5\n")
        f.write("ip -6 route add 2002:541b::2/64 dev iran4config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:54{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config5\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config5 mtu {mtu_value}\n"
        with open("/etc/privates45.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping5()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:54{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:541b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v65.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v65.sh", 0o755)
    pings4_v65_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 6 server 4
def adds4_cron6_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates46.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates46.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping6():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:551b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v66_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v66.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v66.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v66.service"])
    subprocess.run(["systemctl", "start", "pings4_v66.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v66.service"])


def kharej6s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [6]...\033[0m"
    )

    if os.path.isfile("/etc/privates46.sh"):
        os.remove("/etc/privates46.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:551b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:551b::2/64", "dev", "iran4config6"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:55{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates46.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config6 up\n")
        f.write("ip addr add 2002:551b::1/64 dev iran4config6\n")
        f.write("ip -6 route add 2002:551b::2/64 dev iran4config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:55{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config6\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config6 mtu {mtu_value}\n"
        with open("/etc/privates46.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping6()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:55{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:551b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v66.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v66.sh", 0o755)
    pings4_v66_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 7 server 4
def adds4_cron7_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates47.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates47.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping7():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:561b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v67_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v67.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v67.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v67.service"])
    subprocess.run(["systemctl", "start", "pings4_v67.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v67.service"])


def kharej7s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [7]...\033[0m"
    )

    if os.path.isfile("/etc/privates47.sh"):
        os.remove("/etc/privates47.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:561b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:561b::2/64", "dev", "iran4config7"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:56{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates47.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config7 up\n")
        f.write("ip addr add 2002:561b::1/64 dev iran4config7\n")
        f.write("ip -6 route add 2002:561b::2/64 dev iran4config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:56{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config7\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config7 mtu {mtu_value}\n"
        with open("/etc/privates47.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping7()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:56{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:561b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v67.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v67.sh", 0o755)
    pings4_v67_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 8 server 4
def adds4_cron8_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates48.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates48.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping8():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:571b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v68_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v68.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v68.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v68.service"])
    subprocess.run(["systemctl", "start", "pings4_v68.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v68.service"])


def kharej8s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [8]...\033[0m"
    )

    if os.path.isfile("/etc/privates48.sh"):
        os.remove("/etc/privates48.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:571b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:571b::2/64", "dev", "iran4config8"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:57{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates48.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config8 up\n")
        f.write("ip addr add 2002:571b::1/64 dev iran4config8\n")
        f.write("ip -6 route add 2002:571b::2/64 dev iran4config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:57{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config8\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config8 mtu {mtu_value}\n"
        with open("/etc/privates48.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping8()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:57{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:571b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v68.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v68.sh", 0o755)
    pings4_v68_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 9 server 4


def adds4_cron9_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates49.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates49.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping9():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:581b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v69_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v69.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v69.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v69.service"])
    subprocess.run(["systemctl", "start", "pings4_v69.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v69.service"])


def kharej9s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [9]...\033[0m"
    )

    if os.path.isfile("/etc/privates49.sh"):
        os.remove("/etc/privates49.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:581b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:581b::2/64", "dev", "iran4config9"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:58{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates49.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config9 up\n")
        f.write("ip addr add 2002:581b::1/64 dev iran4config9\n")
        f.write("ip -6 route add 2002:581b::2/64 dev iran4config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:58{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config9\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config9 mtu {mtu_value}\n"
        with open("/etc/privates49.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping9()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:58{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:581b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v69.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings4_v69.sh", 0o755)
    pings4_v69_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 10 server 4


def adds4_cron10_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates410.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates410.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs4_ping10():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:591b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings4_v610_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings4_v610.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings4_v610.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings4_v610.service"])
    subprocess.run(["systemctl", "start", "pings4_v610.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings4_v610.service"])


def kharej10s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [10]...\033[0m"
    )

    if os.path.isfile("/etc/privates410.sh"):
        os.remove("/etc/privates410.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:591b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:591b::2/64", "dev", "iran4config10"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:59{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates410.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config10 up\n")
        f.write("ip addr add 2002:591b::1/64 dev iran4config10\n")
        f.write("ip -6 route add 2002:591b::2/64 dev iran4config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:59{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran4config10\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config10 mtu {mtu_value}\n"
        with open("/etc/privates410.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs4_ping10()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:59{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:591b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/ping_v6s410.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/ping_v6s410.sh", 0o755)
    pings4_v610_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## IRAN1 server 4
def runs4_ping1_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:501b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran1s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[1]...\033[0m")

    if os.path.isfile("/etc/privates41.sh"):
        os.remove("/etc/privates41.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:501b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:501b::1/64", "dev", "iran4config1"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:50{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates41.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config1 up\n")
        f.write("ip addr add 2002:501b::2/64 dev iran4config1\n")
        f.write("ip -6 route add 2002:501b::1/64 dev iran4config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:50{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config1\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config1 mtu {mtu_value}\n"
        with open("/etc/privates41.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron1_job()

    sleep(1)
    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping1_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:50{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:501b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v61.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v61.sh", 0o755)
    pings4_v61_service()


## IRAN2 server 4
def runs4_ping2_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:511b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran2s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[2]...\033[0m")

    if os.path.isfile("/etc/privates42.sh"):
        os.remove("/etc/privates42.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:511b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:511b::1/64", "dev", "iran4config2"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:51{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates42.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config2 up\n")
        f.write("ip addr add 2002:511b::2/64 dev iran4config2\n")
        f.write("ip -6 route add 2002:511b::1/64 dev iran4config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:51{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config2\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config2 mtu {mtu_value}\n"
        with open("/etc/privates42.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping2_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:51{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:511b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v62.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v62.sh", 0o755)
    pings4_v62_service()


## IRAN3 server 4
def runs4_ping3_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:521b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran3s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[3]...\033[0m")

    if os.path.isfile("/etc/privates43.sh"):
        os.remove("/etc/privates43.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:521b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:521b::1/64", "dev", "iran4config3"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:52{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates43.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config3 up\n")
        f.write("ip addr add 2002:521b::2/64 dev iran4config3\n")
        f.write("ip -6 route add 2002:521b::1/64 dev iran4config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:52{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config3\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config3 mtu {mtu_value}\n"
        with open("/etc/privates43.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping3_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:52{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:521b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v63.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v63.sh", 0o755)
    pings4_v63_service()


## IRAN4 server 4
def runs4_ping4_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:531b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran4s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[4]...\033[0m")

    if os.path.isfile("/etc/privates44.sh"):
        os.remove("/etc/privates44.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:531b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:531b::1/64", "dev", "iran4config4"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:53{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates44.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config4 up\n")
        f.write("ip addr add 2002:531b::2/64 dev iran4config4\n")
        f.write("ip -6 route add 2002:531b::1/64 dev iran4config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:53{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config4\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config4 mtu {mtu_value}\n"
        with open("/etc/privates44.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping4_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:53{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:531b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v64.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v64.sh", 0o755)
    pings4_v64_service()


## IRAN5 server 4
def runs4_ping5_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:541b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran5s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[5]...\033[0m")

    if os.path.isfile("/etc/privates45.sh"):
        os.remove("/etc/privates45.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:541b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:541b::1/64", "dev", "iran4config5"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:54{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates45.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config5 up\n")
        f.write("ip addr add 2002:541b::2/64 dev iran4config5\n")
        f.write("ip -6 route add 2002:541b::1/64 dev iran4config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:54{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config5\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config5 mtu {mtu_value}\n"
        with open("/etc/privates45.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping5_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:54{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:541b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v65.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v65.sh", 0o755)
    pings4_v65_service()


## IRAN6 server 4
def runs4_ping6_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:551b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran6s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[6]...\033[0m")

    if os.path.isfile("/etc/privates46.sh"):
        os.remove("/etc/privates46.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:551b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:551b::1/64", "dev", "iran4config6"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:55{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates46.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config6 up\n")
        f.write("ip addr add 2002:551b::2/64 dev iran4config6\n")
        f.write("ip -6 route add 2002:551b::1/64 dev iran4config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:55{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config6\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config6 mtu {mtu_value}\n"
        with open("/etc/privates46.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping6_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:55{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:551b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v66.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v66.sh", 0o755)
    pings4_v66_service()


## IRAN7 server 4
def runs4_ping7_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:561b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran7s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[7]...\033[0m")

    if os.path.isfile("/etc/privates47.sh"):
        os.remove("/etc/privates47.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:561b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:561b::1/64", "dev", "iran4config7"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:56{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates47.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config7 up\n")
        f.write("ip addr add 2002:561b::2/64 dev iran4config7\n")
        f.write("ip -6 route add 2002:561b::1/64 dev iran4config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:56{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config7\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config7 mtu {mtu_value}\n"
        with open("/etc/privates47.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping7_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:56{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:561b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v67.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v67.sh", 0o755)
    pings4_v67_service()


## IRAN8 server 4
def runs4_ping8_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:571b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran8s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[8]...\033[0m")

    if os.path.isfile("/etc/privates48.sh"):
        os.remove("/etc/privates48.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:571b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:571b::1/64", "dev", "iran4config8"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:57{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates48.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config8 up\n")
        f.write("ip addr add 2002:571b::2/64 dev iran4config8\n")
        f.write("ip -6 route add 2002:571b::1/64 dev iran4config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:57{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config8\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config8 mtu {mtu_value}\n"
        with open("/etc/privates48.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping8_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:57{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:571b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v68.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v68.sh", 0o755)
    pings4_v68_service()


## IRAN9 server 4
def runs4_ping9_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:581b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran9s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[9]...\033[0m")

    if os.path.isfile("/etc/privates49.sh"):
        os.remove("/etc/privates49.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:581b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:581b::1/64", "dev", "iran4config9"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:58{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates49.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config9 up\n")
        f.write("ip addr add 2002:581b::2/64 dev iran4config9\n")
        f.write("ip -6 route add 2002:581b::1/64 dev iran4config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:58{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config9\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config9 mtu {mtu_value}\n"
        with open("/etc/privates49.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping9_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:58{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:581b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v69.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v69.sh", 0o755)
    pings4_v69_service()


## IRAN10 server 4
def runs4_ping10_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:591b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran10s4_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[10]...\033[0m")

    if os.path.isfile("/etc/privates410.sh"):
        os.remove("/etc/privates410.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran4config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran4config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:591b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran4config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:591b::1/64", "dev", "iran4config10"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:59{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran4config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran4config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates410.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran4config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran4config10 up\n")
        f.write("ip addr add 2002:591b::2/64 dev iran4config10\n")
        f.write("ip -6 route add 2002:591b::1/64 dev iran4config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:59{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran4config10\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran4config10 mtu {mtu_value}\n"
        with open("/etc/privates410.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds4_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs4_ping10_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:59{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:591b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings4_v610.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings4_v610.sh", 0o755)
    pings4_v610_service()


# server 5 for iran 5 kharej 10


def priviran5_kh_ip5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93mPrivate IP \033[92m[10]Kharej [5]IRAN\033[96m Config list [5]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose Which server:\033[0m")
    print("1. \033[92mKHAREJ\033[0m")
    print("2. \033[93mIRAN\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej_private_5iranmenu5()
            break
        elif server_type == "2":
            iran_private_5iranmenu5()
            break
        elif server_type == "0":
            os.system("clear")
            priviran5_mnu_ip() # type: ignore
            break
        else:
            print("Invalid choice.")


def kharej_private_5iranmenu5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93mPrivate IP \033[92m[10]Kharej [5]IRAN\033[96m Config list [5]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[92mKharej[2]\033[0m")
    print("3. \033[93mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[92mKharej[7]\033[0m")
    print("8. \033[93mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej1s5_private_menu()
            break
        elif server_type == "2":
            kharej2s5_private_menu()
            break
        elif server_type == "3":
            kharej3s5_private_menu()
            break
        elif server_type == "4":
            kharej4s5_private_menu()
            break
        elif server_type == "5":
            kharej5s5_private_menu()
            break
        elif server_type == "6":
            kharej6s5_private_menu()
            break
        elif server_type == "7":
            kharej7s5_private_menu()
            break
        elif server_type == "8":
            kharej8s5_private_menu()
            break
        elif server_type == "9":
            kharej9s5_private_menu()
            break
        elif server_type == "10":
            kharej10s5_private_menu()
            break
        elif server_type == "0":
            os.system("clear")
            priviran5_mnu_ip() # type: ignore
            break
        else:
            print("Invalid choice.")


def iran_private_5iranmenu5():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10]KHAREJ [5]IRAN - Config list [5] !\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mkharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "iran{}s5_private_menu".format(i)
        globals()[menu_name]()


def adds5_cron1_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates51.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates51.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping1():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:401b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v61_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v61.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v61.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v61.service"])
    subprocess.run(["systemctl", "start", "pings5_v61.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v61.service"])


def kharej1s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [1]...\033[0m"
    )

    if os.path.isfile("/etc/privates51.sh"):
        os.remove("/etc/privates51.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:401b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:401b::2/64", "dev", "iran5config1"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:40{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates51.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config1 up\n")
        f.write("ip addr add 2002:401b::1/64 dev iran5config1\n")
        f.write("ip -6 route add 2002:401b::2/64 dev iran5config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:40{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config1\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config1 mtu {mtu_value}\n"
        with open("/etc/privates51.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron1_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping1()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:40{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:401b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v61.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v61.sh", 0o755)
    pings5_v61_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 2 server 5
def adds5_cron2_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates52.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates52.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping2():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:411b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v62_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v62.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v62.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v62.service"])
    subprocess.run(["systemctl", "start", "pings5_v62.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v62.service"])


def kharej2s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [2]...\033[0m"
    )

    if os.path.isfile("/etc/privates52.sh"):
        os.remove("/etc/privates52.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:411b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:411b::2/64", "dev", "iran5config2"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:41{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates52.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config2 up\n")
        f.write("ip addr add 2002:411b::1/64 dev iran5config2\n")
        f.write("ip -6 route add 2002:411b::2/64 dev iran5config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:41{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config2\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config2 mtu {mtu_value}\n"
        with open("/etc/privates52.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping2()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:41{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:411b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v62.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v62.sh", 0o755)
    pings5_v62_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 3 server 5
def adds5_cron3_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates53.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates53.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping3():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:421b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v63_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v63.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v63.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v63.service"])
    subprocess.run(["systemctl", "start", "pings5_v63.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v63.service"])


def kharej3s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [3]...\033[0m"
    )

    if os.path.isfile("/etc/privates53.sh"):
        os.remove("/etc/privates53.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:421b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:421b::2/64", "dev", "iran5config3"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:42{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates53.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config3 up\n")
        f.write("ip addr add 2002:421b::1/64 dev iran5config3\n")
        f.write("ip -6 route add 2002:421b::2/64 dev iran5config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:42{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config3\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config3 mtu {mtu_value}\n"
        with open("/etc/privates53.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping3()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:42{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f"| {ip_addr}    |" + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:421b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v63.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v63.sh", 0o755)
    pings5_v63_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 4 server 5
def adds5_cron4_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates54.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates54.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping4():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:431b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v64_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v64.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v64.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v64.service"])
    subprocess.run(["systemctl", "start", "pings5_v64.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v64.service"])


def kharej4s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [4]...\033[0m"
    )

    if os.path.isfile("/etc/privates54.sh"):
        os.remove("/etc/privates54.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:431b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:431b::2/64", "dev", "iran5config4"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:43{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates54.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config4 up\n")
        f.write("ip addr add 2002:431b::1/64 dev iran5config4\n")
        f.write("ip -6 route add 2002:431b::2/64 dev iran5config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:43{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config4\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config4 mtu {mtu_value}\n"
        with open("/etc/privates54.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping4()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:43{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:431b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v64.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v64.sh", 0o755)
    pings5_v64_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 5 server 5
def adds5_cron5_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates55.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates55.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping5():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:441b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v65_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v65.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v65.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v65.service"])
    subprocess.run(["systemctl", "start", "pings5_v65.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v65.service"])


def kharej5s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [5]...\033[0m"
    )

    if os.path.isfile("/etc/privates55.sh"):
        os.remove("/etc/privates55.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:441b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:441b::2/64", "dev", "iran5config5"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:44{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates55.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config5 up\n")
        f.write("ip addr add 2002:441b::1/64 dev iran5config5\n")
        f.write("ip -6 route add 2002:441b::2/64 dev iran5config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:44{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config5\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config5 mtu {mtu_value}\n"
        with open("/etc/privates55.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping5()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:44{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:441b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v65.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v65.sh", 0o755)
    pings5_v65_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## Kharej 6 server 5
def adds5_cron6_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates56.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates56.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping6():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:451b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v66_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v66.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v66.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v66.service"])
    subprocess.run(["systemctl", "start", "pings5_v66.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v66.service"])


def kharej6s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [6]...\033[0m"
    )

    if os.path.isfile("/etc/privates56.sh"):
        os.remove("/etc/privates56.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:451b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:451b::2/64", "dev", "iran5config6"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:45{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates56.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config6 up\n")
        f.write("ip addr add 2002:451b::1/64 dev iran5config6\n")
        f.write("ip -6 route add 2002:451b::2/64 dev iran5config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:45{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config6\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config6 mtu {mtu_value}\n"
        with open("/etc/privates56.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping6()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:45{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:451b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v66.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v66.sh", 0o755)
    pings5_v66_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 7 server 5
def adds5_cron7_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates57.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates57.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping7():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:461b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v67_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v67.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v67.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v67.service"])
    subprocess.run(["systemctl", "start", "pings5_v67.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v67.service"])


def kharej7s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [7]...\033[0m"
    )

    if os.path.isfile("/etc/privates57.sh"):
        os.remove("/etc/privates57.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:461b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:461b::2/64", "dev", "iran5config7"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:46{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates57.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config7 up\n")
        f.write("ip addr add 2002:461b::1/64 dev iran5config7\n")
        f.write("ip -6 route add 2002:461b::2/64 dev iran5config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:46{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config7\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config7 mtu {mtu_value}\n"
        with open("/etc/privates57.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping7()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:46{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:461b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v67.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v67.sh", 0o755)
    pings5_v67_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 8 server 5
def adds5_cron8_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates58.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates58.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping8():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:471b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v68_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v68.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v68.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v68.service"])
    subprocess.run(["systemctl", "start", "pings5_v68.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v68.service"])


def kharej8s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [8]...\033[0m"
    )

    if os.path.isfile("/etc/privates58.sh"):
        os.remove("/etc/privates58.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:471b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:471b::2/64", "dev", "iran5config8"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:47{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates58.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config8 up\n")
        f.write("ip addr add 2002:471b::1/64 dev iran5config8\n")
        f.write("ip -6 route add 2002:471b::2/64 dev iran5config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:47{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config8\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config8 mtu {mtu_value}\n"
        with open("/etc/privates58.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping8()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:47{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:471b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v68.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v68.sh", 0o755)
    pings5_v68_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 9 server 5


def adds5_cron9_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates59.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates59.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping9():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:481b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v69_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v69.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v69.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v69.service"])
    subprocess.run(["systemctl", "start", "pings5_v69.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v69.service"])


def kharej9s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [9]...\033[0m"
    )

    if os.path.isfile("/etc/privates59.sh"):
        os.remove("/etc/privates59.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:481b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:481b::2/64", "dev", "iran5config9"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:48{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates59.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config9 up\n")
        f.write("ip addr add 2002:481b::1/64 dev iran5config9\n")
        f.write("ip -6 route add 2002:481b::2/64 dev iran5config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:48{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config9\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config9 mtu {mtu_value}\n"
        with open("/etc/privates59.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping9()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:48{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:481b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v69.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/pings5_v69.sh", 0o755)
    pings4_v69_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


# kharej 10 server 5


def adds5_cron10_job():
    try:

        subprocess.run(
            "crontab -l | grep -v '/etc/privates510.sh' | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        subprocess.run(
            "(crontab -l ; echo '@reboot /bin/bash /etc/privates510.sh') | crontab -",
            shell=True,
            capture_output=True,
            text=True,
        )

        display_checkmark("\033[92mCronjob added successfully!\033[0m")
    except subprocess.CalledProcessError as e:
        print("\033[91mFailed to add cronjob:\033[0m", e)


def runs5_ping10():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:491b::2"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def pings5_v610_service():
    service_content = """[Unit]
Description=keepalive
After=network.target

[Service]
ExecStart=/bin/bash /etc/pings5_v610.sh
Restart=always

[Install]
WantedBy=multi-user.target
"""

    service_file_path = "/etc/systemd/system/pings5_v610.service"
    with open(service_file_path, "w") as service_file:
        service_file.write(service_content)

    subprocess.run(["systemctl", "daemon-reload"])
    subprocess.run(["systemctl", "enable", "pings5_v610.service"])
    subprocess.run(["systemctl", "start", "pings5_v610.service"])
    sleep(1)
    subprocess.run(["systemctl", "restart", "pings5_v610.service"])


def kharej10s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Kharej server \033[92m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification(
        "\033[93mAdding private IP addresses for Kharej server [10]...\033[0m"
    )

    if os.path.isfile("/etc/privates510.sh"):
        os.remove("/etc/privates510.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:491b::1/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:491b::2/64", "dev", "iran5config10"],
        stdout=subprocess.DEVNULL,
    )
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:49{ip_suffix}b::1/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates510.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config10 up\n")
        f.write("ip addr add 2002:491b::1/64 dev iran5config10\n")
        f.write("ip -6 route add 2002:491b::2/64 dev iran5config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:49{ip_suffix}b::1/64"
            f.write(f"ip addr add {ip_addr} dev iran5config10\n")
    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config10 mtu {mtu_value}\n"
        with open("/etc/privates510.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")
    runs5_ping10()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (Kharej):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:49{ip_suffix}b::1"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content1 = """#!/bin/bash


ip_address="2002:491b::2"


max_pings=5


interval=2


while true
do
   
    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/ping_v6s510.sh", "w") as script_file:
        script_file.write(script_content1)

    os.chmod("/etc/ping_v6s510.sh", 0o755)
    pings5_v610_service()

    print("\033[92mKharej Server Configuration Completed!\033[0m")


## IRAN1 server 5
def runs5_ping1_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:401b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran1s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[1]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[1]...\033[0m")

    if os.path.isfile("/etc/privates51.sh"):
        os.remove("/etc/privates51.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[1]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config1",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config1", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:401b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config1"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:401b::1/64", "dev", "iran5config1"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:40{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config1"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config1"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates51.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config1 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config1 up\n")
        f.write("ip addr add 2002:401b::2/64 dev iran5config1\n")
        f.write("ip -6 route add 2002:401b::1/64 dev iran5config1\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:40{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config1\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config1 mtu {mtu_value}\n"
        with open("/etc/privates51.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron1_job()

    sleep(1)
    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping1_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:40{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:401b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v61.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v61.sh", 0o755)
    pings5_v61_service()


## IRAN2 server 5
def runs5_ping2_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:411b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran2s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[2]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[2]...\033[0m")

    if os.path.isfile("/etc/privates52.sh"):
        os.remove("/etc/privates52.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[2]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config2",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config2", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:411b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config2"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:411b::1/64", "dev", "iran5config2"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:41{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config2"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config2"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates52.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config2 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config2 up\n")
        f.write("ip addr add 2002:411b::2/64 dev iran5config2\n")
        f.write("ip -6 route add 2002:411b::1/64 dev iran5config2\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:41{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config2\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config2 mtu {mtu_value}\n"
        with open("/etc/privates52.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron2_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping2_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:41{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:411b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v62.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v62.sh", 0o755)
    pings5_v62_service()


## IRAN3 server 5
def runs5_ping3_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:421b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran3s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[3]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[3]...\033[0m")

    if os.path.isfile("/etc/privates53.sh"):
        os.remove("/etc/privates53.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[3]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config3",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config3", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:421b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config3"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:421b::1/64", "dev", "iran5config3"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:42{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config3"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config3"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates53.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config3 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config3 up\n")
        f.write("ip addr add 2002:421b::2/64 dev iran5config3\n")
        f.write("ip -6 route add 2002:421b::1/64 dev iran5config3\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:42{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config3\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config3 mtu {mtu_value}\n"
        with open("/etc/privates53.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron3_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping3_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:42{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:421b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v63.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v63.sh", 0o755)
    pings5_v63_service()


## IRAN4 server 5
def runs5_ping4_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:431b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran4s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[4]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[4]...\033[0m")

    if os.path.isfile("/etc/privates54.sh"):
        os.remove("/etc/privates54.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[4]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config4",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config4", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:431b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config4"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:431b::1/64", "dev", "iran5config4"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:43{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config4"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config4"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates54.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config4 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config4 up\n")
        f.write("ip addr add 2002:431b::2/64 dev iran5config4\n")
        f.write("ip -6 route add 2002:431b::1/64 dev iran5config4\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:43{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config4\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config4 mtu {mtu_value}\n"
        with open("/etc/privates54.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron4_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping4_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:43{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:431b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v64.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v64.sh", 0o755)
    pings5_v64_service()


## IRAN5 server 5
def runs5_ping5_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:441b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran5s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[5]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[5]...\033[0m")

    if os.path.isfile("/etc/privates55.sh"):
        os.remove("/etc/privates55.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[5]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config5",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config5", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:441b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config5"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:441b::1/64", "dev", "iran5config5"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:44{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config5"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config5"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates55.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config5 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config5 up\n")
        f.write("ip addr add 2002:441b::2/64 dev iran5config5\n")
        f.write("ip -6 route add 2002:441b::1/64 dev iran5config5\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:44{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config5\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config5 mtu {mtu_value}\n"
        with open("/etc/privates55.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron5_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping5_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:44{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:441b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v65.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v65.sh", 0o755)
    pings5_v65_service()


## IRAN6 server 5
def runs5_ping6_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:451b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran6s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[6]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[6]...\033[0m")

    if os.path.isfile("/etc/privates56.sh"):
        os.remove("/etc/privates56.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[6]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config6",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config6", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:451b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config6"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:451b::1/64", "dev", "iran5config6"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:45{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config6"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config6"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates56.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config6 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config6 up\n")
        f.write("ip addr add 2002:451b::2/64 dev iran5config6\n")
        f.write("ip -6 route add 2002:451b::1/64 dev iran5config6\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:45{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config6\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config6 mtu {mtu_value}\n"
        with open("/etc/privates56.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron6_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping6_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:45{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:451b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v66.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v66.sh", 0o755)
    pings5_v66_service()


## IRAN7 server 5
def runs5_ping7_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:461b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran7s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[7]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[7]...\033[0m")

    if os.path.isfile("/etc/privates57.sh"):
        os.remove("/etc/privates57.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[7]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config7",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config7", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:461b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config7"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:461b::1/64", "dev", "iran5config7"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:46{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config7"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config7"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates57.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config7 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config7 up\n")
        f.write("ip addr add 2002:461b::2/64 dev iran5config7\n")
        f.write("ip -6 route add 2002:461b::1/64 dev iran5config7\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:46{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config7\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config7 mtu {mtu_value}\n"
        with open("/etc/privates57.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron7_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping7_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:46{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:461b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v67.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v67.sh", 0o755)
    pings5_v67_service()


## IRAN8 server 5
def runs5_ping8_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:471b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran8s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[8]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[8]...\033[0m")

    if os.path.isfile("/etc/privates58.sh"):
        os.remove("/etc/privates58.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[8]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config8",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config8", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:471b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config8"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:471b::1/64", "dev", "iran5config8"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:47{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config8"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config8"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates58.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config8 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config8 up\n")
        f.write("ip addr add 2002:471b::2/64 dev iran5config8\n")
        f.write("ip -6 route add 2002:471b::1/64 dev iran5config8\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:47{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config8\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config8 mtu {mtu_value}\n"
        with open("/etc/privates58.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron8_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping8_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:47{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:471b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v68.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v68.sh", 0o755)
    pings5_v68_service()


## IRAN9 server 5
def runs5_ping9_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:481b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran9s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[9]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[9]...\033[0m")

    if os.path.isfile("/etc/privates59.sh"):
        os.remove("/etc/privates59.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[9]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config9",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config9", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:481b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config9"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:481b::1/64", "dev", "iran5config9"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:48{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config9"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config9"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates59.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config9 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config9 up\n")
        f.write("ip addr add 2002:481b::2/64 dev iran5config9\n")
        f.write("ip -6 route add 2002:481b::1/64 dev iran5config9\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:48{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config9\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config9 mtu {mtu_value}\n"
        with open("/etc/privates59.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron9_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping9_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:48{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:481b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v69.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v69.sh", 0o755)
    pings5_v69_service()


## IRAN10 server 5
def runs5_ping10_iran():
    try:
        print("\033[96mPlease Wait, Azumi is pinging...")
        subprocess.run(["ping", "-c", "2", "2002:491b::1"], check=True)
    except subprocess.CalledProcessError as e:
        print(Fore.LIGHTRED_EX + "Pinging failed:", e, Style.RESET_ALL)


def iran10s5_private_menu():

    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mConfiguring Server\033[96m[10]\033[0m")
    print('\033[92m "-"\033[93m═══════════════════════════\033[0m')
    display_notification("\033[93mAdding private IP addresses for Server[10]...\033[0m")

    if os.path.isfile("/etc/privates510.sh"):
        os.remove("/etc/privates510.sh")

    print("\033[93m─────────────────────────────────────────────────────────╮\033[0m")
    local_ip = input(
        "\033[93mEnter \033[92mIRAN Server \033[96m[5]\033[93m IPV4 address: \033[0m"
    )
    remote_ip = input(
        "\033[93mEnter \033[92mKharej \033[96m[10]\033[93m IPV4 address: \033[0m"
    )

    subprocess.run(
        [
            "ip",
            "tunnel",
            "add",
            "iran5config10",
            "mode",
            "sit",
            "remote",
            remote_ip,
            "local",
            local_ip,
            "ttl",
            "255",
        ],
        stdout=subprocess.DEVNULL,
    )
    subprocess.run(
        ["ip", "link", "set", "dev", "iran5config10", "up"], stdout=subprocess.DEVNULL
    )

    initial_ip = "2002:491b::2/64"
    subprocess.run(
        ["ip", "addr", "add", initial_ip, "dev", "iran5config10"],
        stdout=subprocess.DEVNULL,
    )

    subprocess.run(
        ["ip", "-6", "route", "add", "2002:491b::1/64", "dev", "iran5config10"],
        stdout=subprocess.DEVNULL,
    )

    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    num_ips = int(
        input(
            "\033[93mHow many \033[92madditional private IPs\033[93m do you need? \033[0m"
        )
    )
    print("\033[93m─────────────────────────────────────────────────────────╯\033[0m")

    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:49{ip_suffix}b::2/64"

        result = subprocess.run(
            ["ip", "addr", "show", "dev", "iran5config10"],
            capture_output=True,
            text=True,
        )
        if ip_addr in result.stdout:
            print(f"IP address {ip_addr} already exists. Skipping...")
        else:
            subprocess.run(
                ["ip", "addr", "add", ip_addr, "dev", "iran5config10"],
                stdout=subprocess.DEVNULL,
            )

    display_notification("\033[93mAdding commands...\033[0m")
    with open("/etc/privates510.sh", "w") as f:
        f.write("/sbin/modprobe sit\n")
        f.write(
            f"ip tunnel add iran5config10 mode sit remote {remote_ip} local {local_ip} ttl 255\n"
        )
        f.write("ip link set dev iran5config10 up\n")
        f.write("ip addr add 2002:491b::2/64 dev iran5config10\n")
        f.write("ip -6 route add 2002:491b::1/64 dev iran5config10\n")
        for i in range(1, num_ips + 1):
            ip_suffix = hex(i)[2:]
            ip_addr = f"2002:49{ip_suffix}b::2/64"
            f.write(f"ip addr add {ip_addr} dev iran5config10\n")

    set_mtu = input(
        "\033[93mDo you want to set the \033[92mMTU\033[96m [6to4]\033[93m? (\033[92myes\033[93m/\033[91mno\033[93m): \033[0m"
    )
    if set_mtu.lower() == "yes" or set_mtu.lower() == "y":
        mtu_value = input(
            "\033[93mEnter the desired\033[92m MTU value\033[93m: \033[0m"
        )
        mtu_command = f"ip link set dev iran5config10 mtu {mtu_value}\n"
        with open("/etc/privates510.sh", "a") as f:
            f.write(mtu_command)
        subprocess.run(mtu_command, shell=True, check=True)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    display_checkmark("\033[92mPrivate ip added successfully!\033[0m")

    adds5_cron10_job()

    display_checkmark("\033[92mkeepalive service Configured!\033[0m")

    runs5_ping10_iran()
    sleep(1)
    print("\033[93m─────────────────────────────────────────────────────────\033[0m")
    print("\033[93mCreated Private IP Addresses (IRAN):\033[0m")
    for i in range(1, num_ips + 1):
        ip_suffix = hex(i)[2:]
        ip_addr = f"2002:49{ip_suffix}b::2"
        print("\033[92m" + "+---------------------------+" + "\033[0m")
        print("\033[92m" + f" {ip_addr}    " + "\033[0m")
        print("\033[92m" + "+---------------------------+" + "\033[0m")

    script_content = """#!/bin/bash


ip_address="2002:491b::1"


max_pings=5


interval=2


while true
do

    for ((i = 1; i <= max_pings; i++))
    do
        ping_result=$(ping -c 1 $ip_address | grep "time=" | awk -F "time=" "{print $2}" | awk -F " " "{print $1}" | cut -d "." -f1)
        if [ -n "$ping_result" ]; then
            echo "Ping successful! Response time: $ping_result ms"
        else
            echo "Ping failed!"
        fi
    done

    echo "Waiting for $interval seconds..."
    sleep $interval
done
"""

    with open("/etc/pings5_v610.sh", "w") as script_file:
        script_file.write(script_content)

    os.chmod("/etc/pings5_v610.sh", 0o755)
    pings5_v610_service()

# uninstall private 5 server iran 10


def priv_ir1s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates21.sh"):
        with open("/etc/privates21.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config1 mtu" not in line
            ]

            with open("/etc/privates21.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates21.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir2s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates22.sh"):
        with open("/etc/privates22.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config2 mtu" not in line
            ]

            with open("/etc/privates22.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates22.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir3s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates23.sh"):
        with open("/etc/privates23.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config3iran2config3 mtu" not in line
            ]

            with open("/etc/privates23.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates23.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir4s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates24.sh"):
        with open("/etc/privates24.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config4 mtu" not in line
            ]

            with open("/etc/privates24.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates24.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir5s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates25.sh"):
        with open("/etc/privates25.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config5 mtu" not in line
            ]

            with open("/etc/privates25.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates25.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir6s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates26.sh"):
        with open("/etc/privates26.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config6 mtu" not in line
            ]

            with open("/etc/privates26.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates26.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir7s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates27.sh"):
        with open("/etc/privates27.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config7 mtu" not in line
            ]

            with open("/etc/privates27.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates27.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir8s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates28.sh"):
        with open("/etc/privates28.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config8 mtu" not in line
            ]

            with open("/etc/privates28.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates28.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir9s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates29.sh"):
        with open("/etc/privates29.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config9 mtu" not in line
            ]

            with open("/etc/privates29.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates29.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir10s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates210.sh"):
        with open("/etc/privates210.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config10 mtu" not in line
            ]

            with open("/etc/privates210.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates210.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 3
def priv_ir1s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates31.sh"):
        with open("/etc/privates31.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config1 mtu" not in line
            ]

            with open("/etc/privates31.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates31.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir2s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates32.sh"):
        with open("/etc/privates32.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config2 mtu" not in line
            ]

            with open("/etc/privates32.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates32.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir3s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates33.sh"):
        with open("/etc/privates33.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config3 mtu" not in line
            ]

            with open("/etc/privates33.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates33.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir4s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates34.sh"):
        with open("/etc/privates34.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config4 mtu" not in line
            ]

            with open("/etc/privates34.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates34.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir5s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates35.sh"):
        with open("/etc/privates35.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config5 mtu" not in line
            ]

            with open("/etc/privates35.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates35.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir6s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates36.sh"):
        with open("/etc/privates36.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config6 mtu" not in line
            ]

            with open("/etc/privates36.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates36.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir7s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates37.sh"):
        with open("/etc/privates37.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config7 mtu" not in line
            ]

            with open("/etc/privates37.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates37.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir8s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates38.sh"):
        with open("/etc/privates38.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config8 mtu" not in line
            ]

            with open("/etc/privates38.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates38.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir9s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates39.sh"):
        with open("/etc/privates39.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config9 mtu" not in line
            ]

            with open("/etc/privates39.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates39.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir10s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates310.sh"):
        with open("/etc/privates310.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config10 mtu" not in line
            ]

            with open("/etc/privates310.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates310.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 4
def priv_ir1s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates41.sh"):
        with open("/etc/privates41.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config1 mtu" not in line
            ]

            with open("/etc/privates41.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates41.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir2s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates42.sh"):
        with open("/etc/privates42.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config2 mtu" not in line
            ]

            with open("/etc/privates42.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates42.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir3s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates43.sh"):
        with open("/etc/privates43.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config3 mtu" not in line
            ]

            with open("/etc/privates43.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates43.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir4s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates44.sh"):
        with open("/etc/privates44.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config4 mtu" not in line
            ]

            with open("/etc/privates44.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates44.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir5s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates45.sh"):
        with open("/etc/privates45.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config5 mtu" not in line
            ]

            with open("/etc/privates45.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates45.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir6s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates46.sh"):
        with open("/etc/privates46.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config6 mtu" not in line
            ]

            with open("/etc/privates46.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates46.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir7s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates47.sh"):
        with open("/etc/privates47.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config7 mtu" not in line
            ]

            with open("/etc/privates47.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates47.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir8s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates48.sh"):
        with open("/etc/privates48.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config8 mtu" not in line
            ]

            with open("/etc/privates48.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates48.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir9s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates49.sh"):
        with open("/etc/privates49.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config9 mtu" not in line
            ]

            with open("/etc/privates49.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates49.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir10s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates410.sh"):
        with open("/etc/privates410.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config10 mtu" not in line
            ]

            with open("/etc/privates410.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates410.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 5
def priv_ir1s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates51.sh"):
        with open("/etc/privates51.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config1 mtu" not in line
            ]

            with open("/etc/privates51.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates51.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir2s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates52.sh"):
        with open("/etc/privates52.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config2 mtu" not in line
            ]

            with open("/etc/privates52.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates52.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir3s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates53.sh"):
        with open("/etc/privates53.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config3 mtu" not in line
            ]

            with open("/etc/privates53.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates53.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir4s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates54.sh"):
        with open("/etc/privates54.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config4 mtu" not in line
            ]

            with open("/etc/privates54.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates54.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir5s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates55.sh"):
        with open("/etc/privates55.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config5 mtu" not in line
            ]

            with open("/etc/privates55.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates55.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir6s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates56.sh"):
        with open("/etc/privates56.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config6 mtu" not in line
            ]

            with open("/etc/privates56.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates56.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir7s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates57.sh"):
        with open("/etc/privates57.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config7 mtu" not in line
            ]

            with open("/etc/privates57.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates57.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir8s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates58.sh"):
        with open("/etc/privates58.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config8 mtu" not in line
            ]

            with open("/etc/privates58.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates58.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir9s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates59.sh"):
        with open("/etc/privates59.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config9 mtu" not in line
            ]

            with open("/etc/privates59.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates59.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir10s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates510.sh"):
        with open("/etc/privates510.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config10 mtu" not in line
            ]

            with open("/etc/privates510.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates510.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# mtu private 5 server iran 10 kharej
def priv_kh1s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates21.sh"):
        with open("/etc/privates21.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config1 mtu" not in line
            ]

            with open("/etc/privates21.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates21.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh2s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates22.sh"):
        with open("/etc/privates22.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config2 mtu" not in line
            ]

            with open("/etc/privates22.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates22.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh3s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates23.sh"):
        with open("/etc/privates23.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config3 mtu" not in line
            ]

            with open("/etc/privates23.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates23.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh4s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates24.sh"):
        with open("/etc/privates24.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config4 mtu" not in line
            ]

            with open("/etc/privates24.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates24.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh5s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates25.sh"):
        with open("/etc/privates25.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config5 mtu" not in line
            ]

            with open("/etc/privates25.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates25.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh6s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates26.sh"):
        with open("/etc/privates26.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config6 mtu" not in line
            ]

            with open("/etc/privates26.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates26.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh7s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates27.sh"):
        with open("/etc/privates27.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config7 mtu" not in line
            ]

            with open("/etc/privates27.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates27.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh8s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates28.sh"):
        with open("/etc/privates28.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config8 mtu" not in line
            ]

            with open("/etc/privates28.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates28.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh9s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates29.sh"):
        with open("/etc/privates29.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config9 mtu" not in line
            ]

            with open("/etc/privates29.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates29.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh10s2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran2config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates210.sh"):
        with open("/etc/privates210.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran2config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran2config10 mtu" not in line
            ]

            with open("/etc/privates210.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates210.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 3
def priv_kh1s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates31.sh"):
        with open("/etc/privates31.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config1 mtu" not in line
            ]

            with open("/etc/privates31.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates31.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh2s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates32.sh"):
        with open("/etc/privates32.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config2 mtu" not in line
            ]

            with open("/etc/privates32.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates32.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh3s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates33.sh"):
        with open("/etc/privates33.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config3 mtu" not in line
            ]

            with open("/etc/privates33.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates33.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh4s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates34.sh"):
        with open("/etc/privates34.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config4 mtu" not in line
            ]

            with open("/etc/privates34.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates34.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh5s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates35.sh"):
        with open("/etc/privates35.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config5 mtu" not in line
            ]

            with open("/etc/privates35.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates35.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh6s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates36.sh"):
        with open("/etc/privates36.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config6 mtu" not in line
            ]

            with open("/etc/privates36.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates36.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh7s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates37.sh"):
        with open("/etc/privates37.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config7 mtu" not in line
            ]

            with open("/etc/privates37.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates37.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh8s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates38.sh"):
        with open("/etc/privates38.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config8 mtu" not in line
            ]

            with open("/etc/privates38.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates38.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh9s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates39.sh"):
        with open("/etc/privates39.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config9 mtu" not in line
            ]

            with open("/etc/privates39.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates39.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh10s3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran3config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates310.sh"):
        with open("/etc/privates310.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran3config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran3config10 mtu" not in line
            ]

            with open("/etc/privates310.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates310.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 4
def priv_kh1s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates41.sh"):
        with open("/etc/privates41.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config1 mtu" not in line
            ]

            with open("/etc/privates41.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates41.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh2s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates42.sh"):
        with open("/etc/privates42.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config2 mtu" not in line
            ]

            with open("/etc/privates42.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates42.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh3s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates43.sh"):
        with open("/etc/privates43.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config3 mtu" not in line
            ]

            with open("/etc/privates43.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates43.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh4s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates44.sh"):
        with open("/etc/privates44.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config4 mtu" not in line
            ]

            with open("/etc/privates44.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates44.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh5s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates45.sh"):
        with open("/etc/privates45.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config5 mtu" not in line
            ]

            with open("/etc/privates45.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates45.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh6s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates46.sh"):
        with open("/etc/privates46.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config6 mtu" not in line
            ]

            with open("/etc/privates46.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates46.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh7s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates47.sh"):
        with open("/etc/privates47.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config7 mtu" not in line
            ]

            with open("/etc/privates47.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates47.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh8s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates48.sh"):
        with open("/etc/privates48.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config8 mtu" not in line
            ]

            with open("/etc/privates48.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates48.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh9s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates49.sh"):
        with open("/etc/privates49.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config9 mtu" not in line
            ]

            with open("/etc/privates49.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates49.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh10s4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran4config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates410.sh"):
        with open("/etc/privates410.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran4config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran4config10 mtu" not in line
            ]

            with open("/etc/privates410.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates410.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# server 5
def priv_kh1s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates51.sh"):
        with open("/etc/privates51.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config1 mtu" not in line
            ]

            with open("/etc/privates51.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates51.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh2s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates52.sh"):
        with open("/etc/privates52.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config2 mtu" not in line
            ]

            with open("/etc/privates52.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates52.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh3s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates53.sh"):
        with open("/etc/privates53.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config3 mtu" not in line
            ]

            with open("/etc/privates53.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates53.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh4s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates54.sh"):
        with open("/etc/privates54.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config4 mtu" not in line
            ]

            with open("/etc/privates54.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates54.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh5s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates55.sh"):
        with open("/etc/privates55.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config5 mtu" not in line
            ]

            with open("/etc/privates55.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates55.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh6s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates56.sh"):
        with open("/etc/privates56.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config6 mtu" not in line
            ]

            with open("/etc/privates56.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates56.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh7s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates57.sh"):
        with open("/etc/privates57.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config7 mtu" not in line
            ]

            with open("/etc/privates57.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates57.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh8s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates58.sh"):
        with open("/etc/privates58.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config8 mtu" not in line
            ]

            with open("/etc/privates58.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates58.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh9s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates59.sh"):
        with open("/etc/privates59.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config9 mtu" not in line
            ]

            with open("/etc/privates59.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates59.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh10s5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran5config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates510.sh"):
        with open("/etc/privates510.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran5config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran5config10 mtu" not in line
            ]

            with open("/etc/privates510.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates510.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# edit server
def edit_server2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[92mEdit [10]KHAREJ [5]IRAN Servers\033[93m Menu\033[0m")
    print('\033[92m "-"\033[93m════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mAdd | Edit | Reconfig Server \033[0m")
    print(
        "2. \033[93mRemove [for reconfiging, first remove the appropriate server] \033[0m"
    )
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            editmenuu2()
            break
        elif server_type == "2":
            removemenuu3()
            break
        elif server_type == "0":
            clear()
            iran5_kharej10_mnu()
            break
        else:
            print("Invalid choice.")


def editmenuu2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[92mEdit Servers\033[93m Menu\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mPRIVATE IP[SIT] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            edit_5iran10kharej_private()
            break
        elif server_type == "0":
            clear()
            edit_server2()
            break
        else:
            print("Invalid choice.")


# kharej side
def edit_5iran10kharej_private():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - Configs\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[93mKHAREJ\033[0m")
    print("2. \033[92mIRAN\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej_private_editask()
            break
        elif server_type == "2":
            iran_private_editask()
            break
        elif server_type == "0":
            clear()
            editmenuu2()
            break
        else:
            print("Invalid choice.")


def kharej_private_editask():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mKharej Server\033[93m? \033[96m(1-10)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Kharej server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "kharej_private_edit5iranmenu{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def iran_private_editask():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mIRAN Server\033[93m? \033[96m(1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "iran_private_edit5iranmenu{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def kharej_private_edit5iranmenu1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [1]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config1 \033[0m")
    print("2. \033[93m[2] Iran2config1 \033[0m")
    print("3. \033[93m[3] Iran3config1 \033[0m")
    print("4. \033[92m[4] Iran4config1 \033[0m")
    print("5. \033[93m[5] Iran5config1 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej1s1_private_menu()
            break
        elif server_type == "2":
            kharej1s2_private_menu()
            break
        elif server_type == "3":
            kharej1s3_private_menu()
            break
        elif server_type == "4":
            kharej1s4_private_menu()
            break
        elif server_type == "5":
            kharej1s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [2]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config2 \033[0m")
    print("2. \033[93m[2] Iran2config2 \033[0m")
    print("3. \033[93m[3] Iran3config2 \033[0m")
    print("4. \033[92m[4] Iran4config2 \033[0m")
    print("5. \033[93m[5] Iran5config2 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej2s1_private_menu()
            break
        elif server_type == "2":
            kharej2s2_private_menu()
            break
        elif server_type == "3":
            kharej2s3_private_menu()
            break
        elif server_type == "4":
            kharej2s4_private_menu()
            break
        elif server_type == "5":
            kharej2s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [3]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config3 \033[0m")
    print("2. \033[93m[2] Iran2config3 \033[0m")
    print("3. \033[93m[3] Iran3config3 \033[0m")
    print("4. \033[92m[4] Iran4config3 \033[0m")
    print("5. \033[93m[5] Iran5config3 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej3s1_private_menu()
            break
        elif server_type == "2":
            kharej3s2_private_menu()
            break
        elif server_type == "3":
            kharej3s3_private_menu()
            break
        elif server_type == "4":
            kharej3s4_private_menu()
            break
        elif server_type == "5":
            kharej3s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [4]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config4 \033[0m")
    print("2. \033[93m[2] Iran2config4 \033[0m")
    print("3. \033[93m[3] Iran3config4 \033[0m")
    print("4. \033[92m[4] Iran4config4 \033[0m")
    print("5. \033[93m[5] Iran5config4 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej4s1_private_menu()
            break
        elif server_type == "2":
            kharej4s2_private_menu()
            break
        elif server_type == "3":
            kharej4s3_private_menu()
            break
        elif server_type == "4":
            kharej4s4_private_menu()
            break
        elif server_type == "5":
            kharej4s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [5]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config5 \033[0m")
    print("2. \033[93m[2] Iran2config5 \033[0m")
    print("3. \033[93m[3] Iran3config5 \033[0m")
    print("4. \033[92m[4] Iran4config5 \033[0m")
    print("5. \033[93m[5] Iran5config5 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej5s1_private_menu()
            break
        elif server_type == "2":
            kharej5s2_private_menu()
            break
        elif server_type == "3":
            kharej5s3_private_menu()
            break
        elif server_type == "4":
            kharej5s4_private_menu()
            break
        elif server_type == "5":
            kharej5s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu6():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [6]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config6 \033[0m")
    print("2. \033[93m[2] Iran2config6 \033[0m")
    print("3. \033[93m[3] Iran3config6 \033[0m")
    print("4. \033[92m[4] Iran4config6 \033[0m")
    print("5. \033[93m[5] Iran5config6 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej6s1_private_menu()
            break
        elif server_type == "2":
            kharej6s2_private_menu()
            break
        elif server_type == "3":
            kharej6s3_private_menu()
            break
        elif server_type == "4":
            kharej6s4_private_menu()
            break
        elif server_type == "5":
            kharej6s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu7():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [7]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config7 \033[0m")
    print("2. \033[93m[2] Iran2config7 \033[0m")
    print("3. \033[93m[3] Iran3config7 \033[0m")
    print("4. \033[92m[4] Iran4config7 \033[0m")
    print("5. \033[93m[5] Iran5config7 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej7s1_private_menu()
            break
        elif server_type == "2":
            kharej7s2_private_menu()
            break
        elif server_type == "3":
            kharej7s3_private_menu()
            break
        elif server_type == "4":
            kharej7s4_private_menu()
            break
        elif server_type == "5":
            kharej7s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu8():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [8]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config8 \033[0m")
    print("2. \033[93m[2] Iran2config8 \033[0m")
    print("3. \033[93m[3] Iran3config8 \033[0m")
    print("4. \033[92m[4] Iran4config8 \033[0m")
    print("5. \033[93m[5] Iran5config8 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej8s1_private_menu()
            break
        elif server_type == "2":
            kharej8s2_private_menu()
            break
        elif server_type == "3":
            kharej8s3_private_menu()
            break
        elif server_type == "4":
            kharej8s4_private_menu()
            break
        elif server_type == "5":
            kharej8s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu9():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [9]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config9 \033[0m")
    print("2. \033[93m[2] Iran2config9 \033[0m")
    print("3. \033[93m[3] Iran3config9 \033[0m")
    print("4. \033[92m[4] Iran4config9 \033[0m")
    print("5. \033[93m[5] Iran5config9 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej9s1_private_menu()
            break
        elif server_type == "2":
            kharej9s2_private_menu()
            break
        elif server_type == "3":
            kharej9s3_private_menu()
            break
        elif server_type == "4":
            kharej9s4_private_menu()
            break
        elif server_type == "5":
            kharej9s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def kharej_private_edit5iranmenu10():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit Private[SIT] Servers - \033[96mKharej [10]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what server & which config:\033[0m")
    print("1. \033[93m[1] Iran1config10 \033[0m")
    print("2. \033[93m[2] Iran2config10 \033[0m")
    print("3. \033[93m[3] Iran3config10 \033[0m")
    print("4. \033[92m[4] Iran4config10 \033[0m")
    print("5. \033[93m[5] Iran5config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            kharej10s1_private_menu()
            break
        elif server_type == "2":
            kharej10s2_private_menu()
            break
        elif server_type == "3":
            kharej10s3_private_menu()
            break
        elif server_type == "4":
            kharej10s4_private_menu()
            break
        elif server_type == "5":
            kharej10s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def iran_private_edit5iranmenu1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit \033[96mIRAN\033[92m Privateip Servers - \033[96mIRAN [1]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN SERVER [1]:\033[0m")
    print("1. \033[93mIran1config1 \033[0m")
    print("2. \033[93mIran1config2 \033[0m")
    print("3. \033[92mIran1config3 \033[0m")
    print("4. \033[93mIran1config4  \033[0m")
    print("5. \033[93mIran1config5  \033[0m")
    print("6. \033[93mIran1config6   \033[0m")
    print("7. \033[93mIran1config7 \033[0m")
    print("8. \033[92mIran1config8  \033[0m")
    print("9. \033[93mIran1config9   \033[0m")
    print("10.\033[93mIran1config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            iran1s1_private_menu()
            break
        elif server_type == "2":
            iran2s1_private_menu()
            break
        elif server_type == "3":
            iran3s1_private_menu()
            break
        elif server_type == "4":
            iran4s1_private_menu()
            break
        elif server_type == "5":
            iran5s1_private_menu()
            break
        elif server_type == "6":
            iran6s1_private_menu()
            break
        elif server_type == "7":
            iran7s1_private_menu()
            break
        elif server_type == "8":
            iran8s1_private_menu()
            break
        elif server_type == "9":
            iran9s1_private_menu()
            break
        elif server_type == "10":
            iran10s1_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def iran_private_edit5iranmenu2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit \033[96mIRAN\033[92m Privateip Servers - \033[96mIRAN [2]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN SERVER [2]:\033[0m")
    print("1. \033[93mIran2config1 \033[0m")
    print("2. \033[93mIran2config2 \033[0m")
    print("3. \033[92mIran2config3 \033[0m")
    print("4. \033[93mIran2config4  \033[0m")
    print("5. \033[93mIran2config5  \033[0m")
    print("6. \033[93mIran2config6   \033[0m")
    print("7. \033[93mIran2config7 \033[0m")
    print("8. \033[92mIran2config8  \033[0m")
    print("9. \033[93mIran2config9   \033[0m")
    print("10.\033[93mIran2config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            iran1s2_private_menu()
            break
        elif server_type == "2":
            iran2s2_private_menu()
            break
        elif server_type == "3":
            iran3s2_private_menu()
            break
        elif server_type == "4":
            iran4s2_private_menu()
            break
        elif server_type == "5":
            iran5s2_private_menu()
            break
        elif server_type == "6":
            iran6s2_private_menu()
            break
        elif server_type == "7":
            iran7s2_private_menu()
            break
        elif server_type == "8":
            iran8s2_private_menu()
            break
        elif server_type == "9":
            iran9s2_private_menu()
            break
        elif server_type == "10":
            iran10s2_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def iran_private_edit5iranmenu3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit \033[96mIRAN\033[92m Privateip Servers - \033[96mIRAN [3]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN SERVER [3]:\033[0m")
    print("1. \033[93mIran3config1 \033[0m")
    print("2. \033[93mIran3config2 \033[0m")
    print("3. \033[92mIran3config3 \033[0m")
    print("4. \033[93mIran3config4  \033[0m")
    print("5. \033[93mIran3config5  \033[0m")
    print("6. \033[93mIran3config6   \033[0m")
    print("7. \033[93mIran3config7 \033[0m")
    print("8. \033[92mIran3config8  \033[0m")
    print("9. \033[93mIran3config9   \033[0m")
    print("10.\033[93mIran3config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            iran1s3_private_menu()
            break
        elif server_type == "2":
            iran2s3_private_menu()
            break
        elif server_type == "3":
            iran3s3_private_menu()
            break
        elif server_type == "4":
            iran4s3_private_menu()
            break
        elif server_type == "5":
            iran5s3_private_menu()
            break
        elif server_type == "6":
            iran6s3_private_menu()
            break
        elif server_type == "7":
            iran7s3_private_menu()
            break
        elif server_type == "8":
            iran8s3_private_menu()
            break
        elif server_type == "9":
            iran9s3_private_menu()
            break
        elif server_type == "10":
            iran10s3_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def iran_private_edit5iranmenu4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit \033[96mIRAN\033[92m Privateip Servers - \033[96mIRAN [4]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN SERVER [4]:\033[0m")
    print("1. \033[93mIran4config1 \033[0m")
    print("2. \033[93mIran4config2 \033[0m")
    print("3. \033[92mIran4config3 \033[0m")
    print("4. \033[93mIran4config4  \033[0m")
    print("5. \033[93mIran4config5  \033[0m")
    print("6. \033[93mIran4config6   \033[0m")
    print("7. \033[93mIran4config7 \033[0m")
    print("8. \033[92mIran4config8  \033[0m")
    print("9. \033[93mIran4config9   \033[0m")
    print("10.\033[93mIran4config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            iran1s4_private_menu()
            break
        elif server_type == "2":
            iran2s4_private_menu()
            break
        elif server_type == "3":
            iran3s4_private_menu()
            break
        elif server_type == "4":
            iran4s4_private_menu()
            break
        elif server_type == "5":
            iran5s4_private_menu()
            break
        elif server_type == "6":
            iran6s4_private_menu()
            break
        elif server_type == "7":
            iran7s4_private_menu()
            break
        elif server_type == "8":
            iran8s4_private_menu()
            break
        elif server_type == "9":
            iran9s4_private_menu()
            break
        elif server_type == "10":
            iran10s4_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")


def iran_private_edit5iranmenu5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[92mEdit \033[96mIRAN\033[92m Privateip Servers - \033[96mIRAN [5]\033[93m Menu\033[0m"
    )
    print(
        '\033[92m "-"\033[93m═══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN SERVER [5]:\033[0m")
    print("1. \033[93mIran5config1 \033[0m")
    print("2. \033[93mIran5config2 \033[0m")
    print("3. \033[92mIran5config3 \033[0m")
    print("4. \033[93mIran5config4  \033[0m")
    print("5. \033[93mIran5config5  \033[0m")
    print("6. \033[93mIran5config6   \033[0m")
    print("7. \033[93mIran5config7 \033[0m")
    print("8. \033[92mIran5config8  \033[0m")
    print("9. \033[93mIran5config9   \033[0m")
    print("10.\033[93mIran5config10 \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            iran1s5_private_menu()
            break
        elif server_type == "2":
            iran2s5_private_menu()
            break
        elif server_type == "3":
            iran3s5_private_menu()
            break
        elif server_type == "4":
            iran4s5_private_menu()
            break
        elif server_type == "5":
            iran5s5_private_menu()
            break
        elif server_type == "6":
            iran6s5_private_menu()
            break
        elif server_type == "7":
            iran7s5_private_menu()
            break
        elif server_type == "8":
            iran8s5_private_menu()
            break
        elif server_type == "9":
            iran9s5_private_menu()
            break
        elif server_type == "10":
            iran10s5_private_menu()
            break
        elif server_type == "0":
            clear()
            edit_5iran10kharej_private()
            break
        else:
            print("Invalid choice.")

def clear():
    subprocess.run(["clear"])

# mtu
def mtu3_menu():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mEdit MTU [10]KHAREJ [5]IRAN Menu\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mPRIVATE [SIT]\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            private5iran_mtumnu()
            break
        elif server_type == "0":
            clear()
            iran5_kharej10_mnu()
            break
        else:
            print("Invalid choice.")


def private5iran_mtumnu():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[93mEdit MTU [10]KHAREJ [5]IRAN Menu\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKHAREJ \033[0m")
    print("2. \033[93mIRAN \033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            private5iran_mnum1()
            break
        elif server_type == "2":
            private5iran_mnum2()
            break
        elif server_type == "0":
            clear()
            mtu3_menu()
            break
        else:
            print("Invalid choice.")


def private5iran_mnum1():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mKharej Server\033[93m? \033[96m(1-10)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 10:
        print("\033[91mWrong Kharej server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "private5iran_mnu{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def private5iran_mnum2():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Config list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mIRAN Server\033[93m? \033[96m(1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "mtu1_qserver{}".format(iran_server_num)
    globals()[kharej_menu_name]()


# iran side
def mtu1_qserver1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m IRAN[1] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN [1]:\033[0m")
    print("1. \033[92mIran1config1\033[0m")
    print("2. \033[93mIran1config2\033[0m")
    print("3. \033[93mIran1config3\033[0m")
    print("4. \033[92mIran1config4\033[0m")
    print("5. \033[92mIran1config5\033[0m")
    print("6. \033[92mIran1config6\033[0m")
    print("7. \033[93mIran1config7\033[0m")
    print("8. \033[93mIran1config8\033[0m")
    print("9. \033[92mIran1config9\033[0m")
    print("10.\033[92mIran1config10\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_ir1s1_mtu()
            break
        elif server_type == "2":
            priv_ir2s1_mtu()
            break
        elif server_type == "3":
            priv_ir3s1_mtu()
            break
        elif server_type == "4":
            priv_ir4s1_mtu()
            break
        elif server_type == "5":
            priv_ir5s1_mtu()
            break
        elif server_type == "6":
            priv_ir6s1_mtu()
            break
        elif server_type == "7":
            priv_ir7s1_mtu()
            break
        elif server_type == "8":
            priv_ir8s1_mtu()
            break
        elif server_type == "9":
            priv_ir9s1_mtu()
            break
        elif server_type == "10":
            priv_ir10s1_mtu()
            break
        elif server_type == "11":
            priv_irall_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_irall_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_ir{}s1_mtu".format(i)
        globals()[menu_name]()


def mtu1_qserver2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m IRAN[2] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN [2]:\033[0m")
    print("1. \033[92mIran2config1\033[0m")
    print("2. \033[93mIran2config2\033[0m")
    print("3. \033[93mIran2config3\033[0m")
    print("4. \033[92mIran2config4\033[0m")
    print("5. \033[92mIran2config5\033[0m")
    print("6. \033[92mIran2config6\033[0m")
    print("7. \033[93mIran2config7\033[0m")
    print("8. \033[93mIran2config8\033[0m")
    print("9. \033[92mIran2config9\033[0m")
    print("10.\033[92mIran2config10\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_ir1s2_mtu()
            break
        elif server_type == "2":
            priv_ir2s2_mtu()
            break
        elif server_type == "3":
            priv_ir3s2_mtu()
            break
        elif server_type == "4":
            priv_ir4s2_mtu()
            break
        elif server_type == "5":
            priv_ir5s2_mtu()
            break
        elif server_type == "6":
            priv_ir6s2_mtu()
            break
        elif server_type == "7":
            priv_ir7s2_mtu()
            break
        elif server_type == "8":
            priv_ir8s2_mtu()
            break
        elif server_type == "9":
            priv_ir9s2_mtu()
            break
        elif server_type == "10":
            priv_ir10s2_mtu()
            break
        elif server_type == "11":
            priv_irall2_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_irall2_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_ir{}s2_mtu".format(i)
        globals()[menu_name]()


def mtu1_qserver3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m IRAN[3] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN [3]:\033[0m")
    print("1. \033[92mIran3config1\033[0m")
    print("2. \033[93mIran3config2\033[0m")
    print("3. \033[93mIran3config3\033[0m")
    print("4. \033[92mIran3config4\033[0m")
    print("5. \033[92mIran3config5\033[0m")
    print("6. \033[92mIran3config6\033[0m")
    print("7. \033[93mIran3config7\033[0m")
    print("8. \033[93mIran3config8\033[0m")
    print("9. \033[92mIran3config9\033[0m")
    print("10.\033[92mIran3config10\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_ir1s3_mtu()
            break
        elif server_type == "2":
            priv_ir2s3_mtu()
            break
        elif server_type == "3":
            priv_ir3s3_mtu()
            break
        elif server_type == "4":
            priv_ir4s3_mtu()
            break
        elif server_type == "5":
            priv_ir5s3_mtu()
            break
        elif server_type == "6":
            priv_ir6s3_mtu()
            break
        elif server_type == "7":
            priv_ir7s3_mtu()
            break
        elif server_type == "8":
            priv_ir8s3_mtu()
            break
        elif server_type == "9":
            priv_ir9s3_mtu()
            break
        elif server_type == "10":
            priv_ir10s3_mtu()
            break
        elif server_type == "11":
            priv_irall3_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_irall3_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_ir{}s3_mtu".format(i)
        globals()[menu_name]()


def mtu1_qserver4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m IRAN[4] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN [4]:\033[0m")
    print("1. \033[92mIran4config1\033[0m")
    print("2. \033[93mIran4config2\033[0m")
    print("3. \033[93mIran4config3\033[0m")
    print("4. \033[92mIran4config4\033[0m")
    print("5. \033[92mIran4config5\033[0m")
    print("6. \033[92mIran4config6\033[0m")
    print("7. \033[93mIran4config7\033[0m")
    print("8. \033[93mIran4config8\033[0m")
    print("9. \033[92mIran4config9\033[0m")
    print("10.\033[92mIran4config10\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_ir1s4_mtu()
            break
        elif server_type == "2":
            priv_ir2s4_mtu()
            break
        elif server_type == "3":
            priv_ir3s4_mtu()
            break
        elif server_type == "4":
            priv_ir4s4_mtu()
            break
        elif server_type == "5":
            priv_ir5s4_mtu()
            break
        elif server_type == "6":
            priv_ir6s4_mtu()
            break
        elif server_type == "7":
            priv_ir7s4_mtu()
            break
        elif server_type == "8":
            priv_ir8s4_mtu()
            break
        elif server_type == "9":
            priv_ir9s4_mtu()
            break
        elif server_type == "10":
            priv_ir10s4_mtu()
            break
        elif server_type == "11":
            priv_irall4_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_irall4_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_ir{}s4_mtu".format(i)
        globals()[menu_name]()


def mtu1_qserver5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m IRAN[5] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is IRAN [5]:\033[0m")
    print("1. \033[92mIran5config1\033[0m")
    print("2. \033[93mIran5config2\033[0m")
    print("3. \033[93mIran5config3\033[0m")
    print("4. \033[92mIran5config4\033[0m")
    print("5. \033[92mIran5config5\033[0m")
    print("6. \033[92mIran5config6\033[0m")
    print("7. \033[93mIran5config7\033[0m")
    print("8. \033[93mIran5config8\033[0m")
    print("9. \033[92mIran5config9\033[0m")
    print("10.\033[92mIran5config10\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_ir1s5_mtu()
            break
        elif server_type == "2":
            priv_ir2s5_mtu()
            break
        elif server_type == "3":
            priv_ir3s5_mtu()
            break
        elif server_type == "4":
            priv_ir4s5_mtu()
            break
        elif server_type == "5":
            priv_ir5s5_mtu()
            break
        elif server_type == "6":
            priv_ir6s5_mtu()
            break
        elif server_type == "7":
            priv_ir7s5_mtu()
            break
        elif server_type == "8":
            priv_ir8s5_mtu()
            break
        elif server_type == "9":
            priv_ir9s5_mtu()
            break
        elif server_type == "10":
            priv_ir10s5_mtu()
            break
        elif server_type == "11":
            priv_irall5_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_irall5_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_ir{}s5_mtu".format(i)
        globals()[menu_name]()


# server 1 kharej
def private5iran_mnu1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[1] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [1]:\033[0m")
    print("1. \033[92mIran1config1\033[0m")
    print("2. \033[93mIran2config1\033[0m")
    print("3. \033[93mIran3config1\033[0m")
    print("4. \033[92mIran4config1\033[0m")
    print("5. \033[92mIran5config1\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh1s1_mtu()
            break
        elif server_type == "2":
            priv_kh1s2_mtu()
            break
        elif server_type == "3":
            priv_kh1s3_mtu()
            break
        elif server_type == "4":
            priv_kh1s4_mtu()
            break
        elif server_type == "5":
            priv_kh1s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh1s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[2] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [2]:\033[0m")
    print("1. \033[92mIran1config2\033[0m")
    print("2. \033[93mIran2config2\033[0m")
    print("3. \033[93mIran3config2\033[0m")
    print("4. \033[92mIran4config2\033[0m")
    print("5. \033[92mIran5config2\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh2s1_mtu()
            break
        elif server_type == "2":
            priv_kh2s2_mtu()
            break
        elif server_type == "3":
            priv_kh2s3_mtu()
            break
        elif server_type == "4":
            priv_kh2s4_mtu()
            break
        elif server_type == "5":
            priv_kh2s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu2()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu2():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh2s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[3] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [3]:\033[0m")
    print("1. \033[92mIran1config3\033[0m")
    print("2. \033[93mIran2config3\033[0m")
    print("3. \033[93mIran3config3\033[0m")
    print("4. \033[92mIran4config3\033[0m")
    print("5. \033[92mIran5config3\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh3s1_mtu()
            break
        elif server_type == "2":
            priv_kh3s2_mtu()
            break
        elif server_type == "3":
            priv_kh3s3_mtu()
            break
        elif server_type == "4":
            priv_kh3s4_mtu()
            break
        elif server_type == "5":
            priv_kh3s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu3()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu3():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh3s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[4] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [4]:\033[0m")
    print("1. \033[92mIran1config4\033[0m")
    print("2. \033[93mIran2config4\033[0m")
    print("3. \033[93mIran3config4\033[0m")
    print("4. \033[92mIran4config4\033[0m")
    print("5. \033[92mIran5config4\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh4s1_mtu()
            break
        elif server_type == "2":
            priv_kh4s2_mtu()
            break
        elif server_type == "3":
            priv_kh4s3_mtu()
            break
        elif server_type == "4":
            priv_kh4s4_mtu()
            break
        elif server_type == "5":
            priv_kh4s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu4()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu4():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh4s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[5] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [5]:\033[0m")
    print("1. \033[92mIran1config5\033[0m")
    print("2. \033[93mIran2config5\033[0m")
    print("3. \033[93mIran3config5\033[0m")
    print("4. \033[92mIran4config5\033[0m")
    print("5. \033[92mIran5config5\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh5s1_mtu()
            break
        elif server_type == "2":
            priv_kh5s2_mtu()
            break
        elif server_type == "3":
            priv_kh5s3_mtu()
            break
        elif server_type == "4":
            priv_kh5s4_mtu()
            break
        elif server_type == "5":
            priv_kh5s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu5()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu5():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh5s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu6():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[6] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [6]:\033[0m")
    print("1. \033[92mIran1config6\033[0m")
    print("2. \033[93mIran2config6\033[0m")
    print("3. \033[93mIran3config6\033[0m")
    print("4. \033[92mIran4config6\033[0m")
    print("5. \033[92mIran5config6\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh6s1_mtu()
            break
        elif server_type == "2":
            priv_kh6s2_mtu()
            break
        elif server_type == "3":
            priv_kh6s3_mtu()
            break
        elif server_type == "4":
            priv_kh6s4_mtu()
            break
        elif server_type == "5":
            priv_kh6s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu6()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu6():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh6s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu7():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[7] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [7]:\033[0m")
    print("1. \033[92mIran1config7\033[0m")
    print("2. \033[93mIran2config7\033[0m")
    print("3. \033[93mIran3config7\033[0m")
    print("4. \033[92mIran4config7\033[0m")
    print("5. \033[92mIran5config7\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh7s1_mtu()
            break
        elif server_type == "2":
            priv_kh7s2_mtu()
            break
        elif server_type == "3":
            priv_kh7s3_mtu()
            break
        elif server_type == "4":
            priv_kh7s4_mtu()
            break
        elif server_type == "5":
            priv_kh7s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu7()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu7():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh7s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu8():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[8] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [8]:\033[0m")
    print("1. \033[92mIran1config8\033[0m")
    print("2. \033[93mIran2config8\033[0m")
    print("3. \033[93mIran3config8\033[0m")
    print("4. \033[92mIran4config8\033[0m")
    print("5. \033[92mIran5config8\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh8s1_mtu()
            break
        elif server_type == "2":
            priv_kh8s2_mtu()
            break
        elif server_type == "3":
            priv_kh8s3_mtu()
            break
        elif server_type == "4":
            priv_kh8s4_mtu()
            break
        elif server_type == "5":
            priv_kh8s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu8()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu8():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh8s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu9():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[9] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [9]:\033[0m")
    print("1. \033[92mIran1config9\033[0m")
    print("2. \033[93mIran2config9\033[0m")
    print("3. \033[93mIran3config9\033[0m")
    print("4. \033[92mIran4config9\033[0m")
    print("5. \033[92mIran5config9\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh9s1_mtu()
            break
        elif server_type == "2":
            priv_kh9s2_mtu()
            break
        elif server_type == "3":
            priv_kh9s3_mtu()
            break
        elif server_type == "4":
            priv_kh9s4_mtu()
            break
        elif server_type == "5":
            priv_kh9s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu9()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu9():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh9s{}_mtu".format(i)
        globals()[menu_name]()


def private5iran_mnu10():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[93m[10]Kharej[5]IRAN-\033[96m Kharej[10] \033[93mEdit Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mThis is KHAREJ [10]:\033[0m")
    print("1. \033[92mIran1config10\033[0m")
    print("2. \033[93mIran2config10\033[0m")
    print("3. \033[93mIran3config10\033[0m")
    print("4. \033[92mIran4config10\033[0m")
    print("5. \033[92mIran5config10\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[94mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            priv_kh10s1_mtu()
            break
        elif server_type == "2":
            priv_kh10s2_mtu()
            break
        elif server_type == "3":
            priv_kh10s3_mtu()
            break
        elif server_type == "4":
            priv_kh10s4_mtu()
            break
        elif server_type == "5":
            priv_kh10s5_mtu()
            break
        elif server_type == "6":
            priv_khall_mtu10()
            break
        elif server_type == "0":
            clear()
            private5iran_mtumnu()
            break
        else:
            print("Invalid choice.")


def priv_khall_mtu10():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mIran Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "priv_kh10s{}_mtu".format(i)
        globals()[menu_name]()


# uninstall server 2
def removemenuu3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m[10]Kharej [5]IRAN Multiple Servers Menu\033[0m"
    )
    print('\033[92m "-"\033[93m════════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mUninstall Private IP\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_priv_5iran10kharej()
            break
        elif server_type == "0":
            clear()
            edit_server2()
            break
        else:
            print("Invalid choice.")


def remove_priv_5iran10kharej():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m[10]Kharej [5]IRAN Multiple Servers Menu\033[0m"
    )
    print('\033[92m "-"\033[93m════════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mWhich server to remove:\033[0m")
    print("1. \033[92mKHAREJ\033[0m")
    print("2. \033[93mIRAN \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            rmv_edit_kharejprivate()
            break
        elif server_type == "2":
            rmv_edit_iranprivate()
            break
        elif server_type == "0":
            clear()
            removemenuu3()
            break
        else:
            print("Invalid choice.")


def rmv_edit_kharejprivate():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Remove list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mKharej Server\033[93m? \033[96m(1-10)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 10:
        print("\033[91mWrong Kharej server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "rmv_5iran10kharej_private{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def rmv_edit_iranprivate():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Remove list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mIRAN Server\033[93m? \033[96m(1-5)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 5:
        print("\033[91mWrong Iran server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "edit_5iran10kharej_6to4{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def rmv_5iran10kharej_private1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[1]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mIran1config1\033[0m")
    print("2. \033[92mIran2config1\033[0m")
    print("3. \033[93mIran3config1\033[0m")
    print("4. \033[92mIran4config1\033[0m")
    print("5. \033[92mIran5config1\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s1()
            break
        elif server_type == "2":
            remove_private1s2()
            break
        elif server_type == "3":
            remove_private1s3()
            break
        elif server_type == "4":
            remove_private1s4()
            break
        elif server_type == "5":
            remove_private1s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private1s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[2]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mIran1config2\033[0m")
    print("2. \033[92mIran2config2\033[0m")
    print("3. \033[93mIran3config2\033[0m")
    print("4. \033[92mIran4config2\033[0m")
    print("5. \033[92mIran5config2\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private2s1()
            break
        elif server_type == "2":
            remove_private2s2()
            break
        elif server_type == "3":
            remove_private2s3()
            break
        elif server_type == "4":
            remove_private2s4()
            break
        elif server_type == "5":
            remove_private2s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate2()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate2():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private2s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[3]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config3\033[0m")
    print("2. \033[92mIran2config3\033[0m")
    print("3. \033[93mIran3config3\033[0m")
    print("4. \033[92mIran4config3\033[0m")
    print("5. \033[92mIran5config3\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private3s1()
            break
        elif server_type == "2":
            remove_private3s2()
            break
        elif server_type == "3":
            remove_private3s3()
            break
        elif server_type == "4":
            remove_private3s4()
            break
        elif server_type == "5":
            remove_private3s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate3()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate3():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private3s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[4]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config4\033[0m")
    print("2. \033[92mIran2config4\033[0m")
    print("3. \033[93mIran3config4\033[0m")
    print("4. \033[92mIran4config4\033[0m")
    print("5. \033[92mIran5config4\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private4s1()
            break
        elif server_type == "2":
            remove_private4s2()
            break
        elif server_type == "3":
            remove_private4s3()
            break
        elif server_type == "4":
            remove_private4s4()
            break
        elif server_type == "5":
            remove_private4s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate4()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate4():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private4s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[5]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config5\033[0m")
    print("2. \033[92mIran2config5\033[0m")
    print("3. \033[93mIran3config5\033[0m")
    print("4. \033[92mIran4config5\033[0m")
    print("5. \033[92mIran5config5\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private5s1()
            break
        elif server_type == "2":
            remove_private5s2()
            break
        elif server_type == "3":
            remove_private5s3()
            break
        elif server_type == "4":
            remove_private5s4()
            break
        elif server_type == "5":
            remove_private5s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate5()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate5():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private5s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private6():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[6]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config6\033[0m")
    print("2. \033[92mIran2config6\033[0m")
    print("3. \033[93mIran3config6\033[0m")
    print("4. \033[92mIran4config6\033[0m")
    print("5. \033[92mIran5config6\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private6s1()
            break
        elif server_type == "2":
            remove_private6s2()
            break
        elif server_type == "3":
            remove_private6s3()
            break
        elif server_type == "4":
            remove_private6s4()
            break
        elif server_type == "5":
            remove_private6s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate6()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate6():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private6s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private7():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[7]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config7\033[0m")
    print("2. \033[92mIran2config7\033[0m")
    print("3. \033[93mIran3config7\033[0m")
    print("4. \033[92mIran4config7\033[0m")
    print("5. \033[92mIran5config7\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private7s1()
            break
        elif server_type == "2":
            remove_private7s2()
            break
        elif server_type == "3":
            remove_private7s3()
            break
        elif server_type == "4":
            remove_private7s4()
            break
        elif server_type == "5":
            remove_private7s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate7()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate7():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private7s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private8():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[8]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config8\033[0m")
    print("2. \033[92mIran2config8\033[0m")
    print("3. \033[93mIran3config8\033[0m")
    print("4. \033[92mIran4config8\033[0m")
    print("5. \033[92mIran5config8\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private8s1()
            break
        elif server_type == "2":
            remove_private8s2()
            break
        elif server_type == "3":
            remove_private8s3()
            break
        elif server_type == "4":
            remove_private8s4()
            break
        elif server_type == "5":
            remove_private8s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate8()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate8():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private8s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private9():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[9]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config9\033[0m")
    print("2. \033[92mIran2config9\033[0m")
    print("3. \033[93mIran3config9\033[0m")
    print("4. \033[92mIran4config9\033[0m")
    print("5. \033[92mIran5config9\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private9s1()
            break
        elif server_type == "2":
            remove_private9s2()
            break
        elif server_type == "3":
            remove_private9s3()
            break
        elif server_type == "4":
            remove_private9s4()
            break
        elif server_type == "5":
            remove_private9s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate9()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate9():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private9s{}".format(i)
        globals()[menu_name]()


def rmv_5iran10kharej_private10():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip [10]Kharej [5]IRAN - \033[96mKharej[10]\033[0m"
    )
    print(
        '\033[92m "-"\033[93m══════════════════════════════════════════════════════════\033[0m'
    )
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose:\033[0m")
    print("1. \033[92mIran1config10\033[0m")
    print("2. \033[92mIran2config10\033[0m")
    print("3. \033[93mIran3config10\033[0m")
    print("4. \033[92mIran4config10\033[0m")
    print("5. \033[92mIran5config10\033[0m")
    print("6. \033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private10s1()
            break
        elif server_type == "2":
            remove_private10s2()
            break
        elif server_type == "3":
            remove_private10s3()
            break
        elif server_type == "4":
            remove_private10s4()
            break
        elif server_type == "5":
            remove_private10s5()
            break
        elif server_type == "6":
            ip6_5iran_qprivate10()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_5iran_qprivate10():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private10s{}".format(i)
        globals()[menu_name]()


# iran
def edit_5iran10kharej_6to41():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip \033[96mIRAN Server [1]\033[0m"
    )
    print('\033[92m "-"\033[93m═══════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose :\033[0m")
    print("1. \033[92mIran1config1\033[0m")
    print("2. \033[92mIran2config1\033[0m")
    print("3. \033[93mIran3config1\033[0m")
    print("4. \033[92mIran4config1\033[0m")
    print("5. \033[92mIran5config1\033[0m")
    print("6. \033[92mIran6config1\033[0m")
    print("7. \033[92mIran7config1\033[0m")
    print("8. \033[93mIran8config1\033[0m")
    print("9. \033[92mIran9config1\033[0m")
    print("10.\033[92mIran10config1\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s1i()
            break
        elif server_type == "2":
            remove_private2s1i()
            break
        elif server_type == "3":
            remove_private3s1i()
            break
        elif server_type == "4":
            remove_private4s1i()
            break
        elif server_type == "5":
            remove_private5s1i()
            break
        elif server_type == "6":
            remove_private6s1i()
            break
        elif server_type == "7":
            remove_private7s1i()
            break
        elif server_type == "8":
            remove_private8s1i()
            break
        elif server_type == "9":
            remove_private9s1i()
            break
        elif server_type == "10":
            remove_private10s1i()
            break
        elif server_type == "11":
            ip6_10iran_qprivate1()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_10iran_qprivate1():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s1i".format(i)
        globals()[menu_name]()


def edit_5iran10kharej_6to42():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip \033[96mIRAN Server [2]\033[0m"
    )
    print('\033[92m "-"\033[93m═══════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose :\033[0m")
    print("1. \033[92mIran1config2\033[0m")
    print("2. \033[92mIran2config2\033[0m")
    print("3. \033[93mIran3config2\033[0m")
    print("4. \033[92mIran4config2\033[0m")
    print("5. \033[92mIran5config2\033[0m")
    print("6. \033[92mIran6config2\033[0m")
    print("7. \033[92mIran7config2\033[0m")
    print("8. \033[93mIran8config2\033[0m")
    print("9. \033[92mIran9config2\033[0m")
    print("10.\033[92mIran10config2\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s2i()
            break
        elif server_type == "2":
            remove_private2s2i()
            break
        elif server_type == "3":
            remove_private3s2i()
            break
        elif server_type == "4":
            remove_private4s2i()
            break
        elif server_type == "5":
            remove_private5s2i()
            break
        elif server_type == "6":
            remove_private6s2i()
            break
        elif server_type == "7":
            remove_private7s2i()
            break
        elif server_type == "8":
            remove_private8s2i()
            break
        elif server_type == "9":
            remove_private9s2i()
            break
        elif server_type == "10":
            remove_private10s2i()
            break
        elif server_type == "11":
            ip6_10iran_qprivate2()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_10iran_qprivate2():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s2i".format(i)
        globals()[menu_name]()


def edit_5iran10kharej_6to43():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip \033[96mIRAN Server [3]\033[0m"
    )
    print('\033[92m "-"\033[93m═══════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose :\033[0m")
    print("1. \033[92mIran1config3\033[0m")
    print("2. \033[92mIran2config3\033[0m")
    print("3. \033[93mIran3config3\033[0m")
    print("4. \033[92mIran4config3\033[0m")
    print("5. \033[92mIran5config3\033[0m")
    print("6. \033[92mIran6config3\033[0m")
    print("7. \033[92mIran7config3\033[0m")
    print("8. \033[93mIran8config3\033[0m")
    print("9. \033[92mIran9config3\033[0m")
    print("10.\033[92mIran10config3\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s3i()
            break
        elif server_type == "2":
            remove_private2s3i()
            break
        elif server_type == "3":
            remove_private3s3i()
            break
        elif server_type == "4":
            remove_private4s3i()
            break
        elif server_type == "5":
            remove_private5s3i()
            break
        elif server_type == "6":
            remove_private6s3i()
            break
        elif server_type == "7":
            remove_private7s3i()
            break
        elif server_type == "8":
            remove_private8s3i()
            break
        elif server_type == "9":
            remove_private9s3i()
            break
        elif server_type == "10":
            remove_private10s3i()
            break
        elif server_type == "11":
            ip6_10iran_qprivate3()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_10iran_qprivate3():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s3i".format(i)
        globals()[menu_name]()


def edit_5iran10kharej_6to44():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip \033[96mIRAN Server [4]\033[0m"
    )
    print('\033[92m "-"\033[93m═══════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose :\033[0m")
    print("1. \033[92mIran1config4\033[0m")
    print("2. \033[92mIran2config4\033[0m")
    print("3. \033[93mIran3config4\033[0m")
    print("4. \033[92mIran4config4\033[0m")
    print("5. \033[92mIran5config4\033[0m")
    print("6. \033[92mIran6config4\033[0m")
    print("7. \033[92mIran7config4\033[0m")
    print("8. \033[93mIran8config4\033[0m")
    print("9. \033[92mIran9config4\033[0m")
    print("10.\033[92mIran10config4\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s4i()
            break
        elif server_type == "2":
            remove_private2s4i()
            break
        elif server_type == "3":
            remove_private3s4i()
            break
        elif server_type == "4":
            remove_private4s4i()
            break
        elif server_type == "5":
            remove_private5s4i()
            break
        elif server_type == "6":
            remove_private6s4i()
            break
        elif server_type == "7":
            remove_private7s4i()
            break
        elif server_type == "8":
            remove_private8s4i()
            break
        elif server_type == "9":
            remove_private9s4i()
            break
        elif server_type == "10":
            remove_private10s4i()
            break
        elif server_type == "11":
            ip6_10iran_qprivate4()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_10iran_qprivate4():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s4i".format(i)
        globals()[menu_name]()


def edit_5iran10kharej_6to45():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m Privateip \033[96mIRAN Server [5]\033[0m"
    )
    print('\033[92m "-"\033[93m═══════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose :\033[0m")
    print("1. \033[92mIran1config5\033[0m")
    print("2. \033[92mIran2config5\033[0m")
    print("3. \033[93mIran3config5\033[0m")
    print("4. \033[92mIran4config5\033[0m")
    print("5. \033[92mIran5config5\033[0m")
    print("6. \033[92mIran6config5\033[0m")
    print("7. \033[92mIran7config5\033[0m")
    print("8. \033[93mIran8config5\033[0m")
    print("9. \033[92mIran9config5\033[0m")
    print("10.\033[92mIran10config5\033[0m")
    print("11.\033[96mAll of them\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s5i()
            break
        elif server_type == "2":
            remove_private2s5i()
            break
        elif server_type == "3":
            remove_private3s5i()
            break
        elif server_type == "4":
            remove_private4s5i()
            break
        elif server_type == "5":
            remove_private5s5i()
            break
        elif server_type == "6":
            remove_private6s5i()
            break
        elif server_type == "7":
            remove_private7s5i()
            break
        elif server_type == "8":
            remove_private8s5i()
            break
        elif server_type == "9":
            remove_private9s5i()
            break
        elif server_type == "10":
            remove_private10s5i()
            break
        elif server_type == "11":
            ip6_10iran_qprivate5()
            break
        elif server_type == "0":
            clear()
            remove_priv_5iran10kharej()
            break
        else:
            print("Invalid choice.")


def ip6_10iran_qprivate5():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mConfigs\033[93m do you want to delete?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s5i".format(i)
        globals()[menu_name]()


# uninstall
def remove3_menu():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m[10]KHAREJ [5]IRAN Multiple Servers Menu\033[0m"
    )
    print('\033[92m "-"\033[93m═════════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mUninstall PrivateIP [SIT]\033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove3_menu_privateip()
            break
        elif server_type == "0":
            clear()
            iran5_kharej10_mnu()
            break
        else:
            print("Invalid choice.")


def remove3_menu_privateip():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print(
        "\033[92m(   ) \033[91mUninstall\033[93m[10]Kharej [5]IRAN Multiple Servers Menu\033[0m"
    )
    print('\033[92m "-"\033[93m════════════════════════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mWhich server to remove:\033[0m")
    print("1. \033[92mKHAREJ\033[0m")
    print("2. \033[93mIRAN \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            rmv_edit_kharejprivate()
            break
        elif server_type == "2":
            rmv_edit_iranprivate()
            break
        elif server_type == "0":
            clear()
            remove3_menu()
            break
        else:
            print("Invalid choice.")


def rmv5_qtenkharej_private1():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private1s{}".format(i)
        globals()[menu_name]()


def rmv_tenonekharejiran_private1m():
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    display_notification("\033[93m[10] Kharej [5] IRAN - Remove list\033[0m")
    print("\033[93m────────────────────────────────────────────────────\033[0m")
    iran_server_num = int(
        input(
            "\033[93mChoose \033[92mKharej Server\033[93m? \033[96m(1-10)\033[93m: \033[0m"
        )
    )

    if iran_server_num < 1 or iran_server_num > 10:
        print("\033[91mWrong Iran server's number. Plz try again.\033[0m")
        return

    kharej_menu_name = "rmv_5iran10kharej_private{}".format(iran_server_num)
    globals()[kharej_menu_name]()


def rmv_tenonekharejiran_private1():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[91mUninstall\033[93m Private [10]Kharej\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[93mKharej[2]\033[0m")
    print("3. \033[92mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[93mKharej[7]\033[0m")
    print("8. \033[92mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    print("11. \033[93mIRAN [1] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s1()
            break
        elif server_type == "2":
            remove_private2s1()
            break
        elif server_type == "3":
            remove_private3s1()
            break
        elif server_type == "4":
            remove_private4s1()
            break
        elif server_type == "5":
            remove_private5s1()
            break
        elif server_type == "6":
            remove_private6s1()
            break
        elif server_type == "7":
            remove_private7s1()
            break
        elif server_type == "8":
            remove_private8s1()
            break
        elif server_type == "9":
            remove_private9s1()
            break
        elif server_type == "10":
            remove_private10s1()
            break
        elif server_type == "11":
            rmv5_qtenkharej_private1()
            break
        elif server_type == "0":
            clear()
            remove3_menu_privateip()
            break
        else:
            print("Invalid choice.")


# server2


def rmv5_qtenkharej_private2():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s2i".format(i)
        globals()[menu_name]()


def rmv_tenonekharejiran_private2():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[91mUninstall\033[93m Private [10]Kharej\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[93mKharej[2]\033[0m")
    print("3. \033[92mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[93mKharej[7]\033[0m")
    print("8. \033[92mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    print("11. \033[93mIRAN [2] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s2()
            break
        elif server_type == "2":
            remove_private2s2()
            break
        elif server_type == "3":
            remove_private3s2()
            break
        elif server_type == "4":
            remove_private4s2()
            break
        elif server_type == "5":
            remove_private5s2()
            break
        elif server_type == "6":
            remove_private6s2()
            break
        elif server_type == "7":
            remove_private7s2()
            break
        elif server_type == "8":
            remove_private8s2()
            break
        elif server_type == "9":
            remove_private9s2()
            break
        elif server_type == "10":
            remove_private10s2()
            break
        elif server_type == "11":
            rmv5_qtenkharej_private2()
            break
        elif server_type == "0":
            clear()
            remove3_menu_privateip()
            break
        else:
            print("Invalid choice.")


# server3


def rmv5_qtenkharej_private3():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s3i".format(i)
        globals()[menu_name]()


def rmv_tenonekharejiran_private3():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[91mUninstall\033[93m Private [10]Kharej\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[93mKharej[2]\033[0m")
    print("3. \033[92mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[93mKharej[7]\033[0m")
    print("8. \033[92mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    print("11. \033[93mIRAN [3] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s3()
            break
        elif server_type == "2":
            remove_private2s3()
            break
        elif server_type == "3":
            remove_private3s3()
            break
        elif server_type == "4":
            remove_private4s3()
            break
        elif server_type == "5":
            remove_private5s3()
            break
        elif server_type == "6":
            remove_private6s3()
            break
        elif server_type == "7":
            remove_private7s3()
            break
        elif server_type == "8":
            remove_private8s3()
            break
        elif server_type == "9":
            remove_private9s3()
            break
        elif server_type == "10":
            remove_private10s3()
            break
        elif server_type == "11":
            rmv5_qtenkharej_private3()
            break
        elif server_type == "0":
            clear()
            remove3_menu_privateip()
            break
        else:
            print("Invalid choice.")


# server 4
def rmv5_qtenkharej_private4():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s4i".format(i)
        globals()[menu_name]()


def rmv_tenonekharejiran_private4():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[91mUninstall\033[93m Private [10]Kharej\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[93mKharej[2]\033[0m")
    print("3. \033[92mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[93mKharej[7]\033[0m")
    print("8. \033[92mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    print("11. \033[93mIRAN [4] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s4()
            break
        elif server_type == "2":
            remove_private2s4()
            break
        elif server_type == "3":
            remove_private3s4()
            break
        elif server_type == "4":
            remove_private4s4()
            break
        elif server_type == "5":
            remove_private5s4()
            break
        elif server_type == "6":
            remove_private6s4()
            break
        elif server_type == "7":
            remove_private7s4()
            break
        elif server_type == "8":
            remove_private8s4()
            break
        elif server_type == "9":
            remove_private9s4()
            break
        elif server_type == "10":
            remove_private10s4()
            break
        elif server_type == "11":
            rmv5_qtenkharej_private4()
            break
        elif server_type == "0":
            clear()
            remove3_menu_privateip()
            break
        else:
            print("Invalid choice.")


# server5


def rmv5_qtenkharej_private5():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mQuestion time !\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    num_servers = int(
        input("\033[93mHow many \033[92mKharej Servers\033[93m do you have?\033[0m ")
    )

    for i in range(1, num_servers + 1):
        menu_name = "remove_private{}s5i".format(i)
        globals()[menu_name]()


def rmv_tenonekharejiran_private5():
    os.system("clear")
    print("\033[92m ^ ^\033[0m")
    print("\033[92m(\033[91mO,O\033[92m)\033[0m")
    print("\033[92m(   ) \033[91mUninstall\033[93m Private [10]Kharej\033[0m")
    print('\033[92m "-"\033[93m══════════════════════════\033[0m')
    print("\033[93m╭───────────────────────────────────────╮\033[0m")
    print("\033[93mChoose what to do:\033[0m")
    print("1. \033[92mKharej[1]\033[0m")
    print("2. \033[93mKharej[2]\033[0m")
    print("3. \033[92mKharej[3]\033[0m")
    print("4. \033[92mKharej[4]\033[0m")
    print("5. \033[92mKharej[5]\033[0m")
    print("6. \033[92mKharej[6]\033[0m")
    print("7. \033[93mKharej[7]\033[0m")
    print("8. \033[92mKharej[8]\033[0m")
    print("9. \033[92mKharej[9]\033[0m")
    print("10.\033[92mKharej[10]\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    print("11. \033[93mIRAN [5] \033[0m")
    print("0. \033[91mback to the previous menu\033[0m")
    print("\033[93m╰───────────────────────────────────────╯\033[0m")

    while True:
        server_type = input("\033[38;5;205mEnter your choice Please: \033[0m")
        if server_type == "1":
            remove_private1s5()
            break
        elif server_type == "2":
            remove_private2s5()
            break
        elif server_type == "3":
            remove_private3s5()
            break
        elif server_type == "4":
            remove_private4s5()
            break
        elif server_type == "5":
            remove_private5s5()
            break
        elif server_type == "6":
            remove_private6s5()
            break
        elif server_type == "7":
            remove_private7s5()
            break
        elif server_type == "8":
            remove_private8s5()
            break
        elif server_type == "9":
            remove_private9s5()
            break
        elif server_type == "10":
            remove_private10s5()
            break
        elif server_type == "11":
            rmv5_qtenkharej_private5()
            break
        elif server_type == "0":
            clear()
            remove3_menu_privateip()
            break
        else:
            print("Invalid choice.")


def remove_private1s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates21.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates21.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates21.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates22.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates22.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates22.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates23.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates23.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates23.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates24.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates24.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates24.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates25.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates25.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates25.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates26.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates26.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates26.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates27.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates27.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates27.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates28.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates28.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates28.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates29.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates29.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates29.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s2():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates210.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates210.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates210.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings2_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings2_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# unistanll pre privateip 5 iran 10kharej server 3
def remove_private1s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates31.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates31.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates31.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates32.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates32.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates32.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates33.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates33.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates33.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates34.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates34.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates34.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates35.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates35.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates35.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates36.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates36.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates36.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates37.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates37.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates37.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates38.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates38.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates38.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates39.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates39.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates39.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s3():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates310.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates310.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates310.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings3_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings3_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# uninstall privateip 5 iran 10 kharej server 4
def remove_private1s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates41.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates41.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates41.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates42.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates42.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates42.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates43.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates43.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates43.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates44.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates44.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates44.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates45.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates45.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates45.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates46.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates46.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates46.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates47.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates47.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates47.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates48.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates48.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates48.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates49.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates49.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates49.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s4():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates410.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates410.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates410.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings4_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings4_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# uninstall 5 iran 10 kharej server 5
def remove_private1s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates51.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates51.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates51.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates52.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates52.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates52.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates53.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates53.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates53.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates54.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates54.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates54.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates55.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates55.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates55.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates56.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates56.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates56.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates57.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates57.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates57.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates58.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates58.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates58.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates59.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates59.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates59.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s5():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates510.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates510.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates510.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings5_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings5_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# iran side


def remove_private1s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates21.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates21.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates21.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates22.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates22.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates22.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates23.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates23.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates23.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates24.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates24.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates24.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates25.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates25.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates25.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates26.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates26.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates26.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates27.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates27.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates27.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates28.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates28.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates28.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates29.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates29.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates29.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings2_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings2_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s2i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates210.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates210.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates210.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings2_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings2_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings2_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings2_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran2config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran2config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# unistanll pre privateip 5 iran 10kharej server 3
def remove_private1s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates31.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates31.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates31.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates32.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates32.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates32.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates33.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates33.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates33.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates34.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates34.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates34.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates35.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates35.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates35.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates36.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates36.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates36.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates37.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates37.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates37.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates38.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates38.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates38.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates39.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates39.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates39.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings3_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings3_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s3i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates310.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates310.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates310.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings3_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings3_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings3_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings3_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran3config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran3config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# uninstall privateip 5 iran 10 kharej server 4
def remove_private1s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates41.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates41.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates41.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates42.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates42.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates42.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates43.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates43.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates43.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates44.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates44.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates44.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates45.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates45.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates45.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates46.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates46.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates46.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates47.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates47.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates47.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates48.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates48.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates48.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates49.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates49.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates49.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings4_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings4_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s4i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates410.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates410.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates410.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings4_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings4_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings4_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings4_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran4config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran4config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# uninstall 5 iran 10 kharej server 5
def remove_private1s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates51.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates51.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates51.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates52.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates52.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates52.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates53.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates53.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates53.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates54.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates54.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates54.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates55.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates55.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates55.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates56.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates56.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates56.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates57.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates57.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates57.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates58.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates58.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates58.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates59.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates59.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates59.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings5_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings5_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s5i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates510.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates510.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates510.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings5_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings5_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings5_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings5_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran5config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran5config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())

def remove_private1s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates11.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates11.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates11.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates12.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates12.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates12.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates13.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates13.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates13.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates14.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates14.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates14.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates15.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates15.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates15.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates16.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates16.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates16.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates17.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates17.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates17.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates18.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates18.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates18.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates19.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates19.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates19.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s1():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates110.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates110.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates110.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings1_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings1_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private1s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates11.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates11.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates11.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v61.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v61.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v61.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v61.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config1 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config1 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private2s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates12.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates12.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates12.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v62.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v62.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v62.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v62.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config2 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config2 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private3s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates13.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates13.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates13.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v63.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v63.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v63.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v63.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config3 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config3 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private4s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates14.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates14.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates14.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v64.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v64.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v64.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v64.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config4 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config4 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def remove_private5s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates15.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates15.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates15.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v65.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v65.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v65.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v65.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config5 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config5 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private6
def remove_private6s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates16.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates16.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates16.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v66.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v66.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v66.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v66.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config6 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config6 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private7
def remove_private7s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates17.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates17.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates17.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v67.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v67.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v67.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v67.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config7 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config7 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private8
def remove_private8s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates18.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates18.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates18.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v68.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v68.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v68.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v68.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config8 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config8 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private9
def remove_private9s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates19.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates19.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates19.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v69.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v69.service > /dev/null 2>&1", shell=True
        )
        subprocess.run("systemctl stop pings1_v69.service > /dev/null 2>&1", shell=True)
        subprocess.run(
            "rm /etc/systemd/system/pings1_v69.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config9 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config9 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


# private10
def remove_private10s1i():
    os.system("clear")
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93mRemoving private IP addresses...\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")

    try:
        if subprocess.call("test -f /etc/privates110.sh", shell=True) == 0:
            subprocess.run("rm /etc/privates110.sh", shell=True)

        display_notification("\033[93mRemoving cronjob...\033[0m")
        subprocess.run(
            'crontab -l | grep -v "@reboot /bin/bash /etc/privates110.sh" | crontab -',
            shell=True,
        )

        subprocess.run("sudo rm /etc/pings1_v610.sh", shell=True)

        time.sleep(1)
        subprocess.run(
            "systemctl disable pings1_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "systemctl stop pings1_v610.service > /dev/null 2>&1", shell=True
        )
        subprocess.run(
            "rm /etc/systemd/system/pings1_v610.service > /dev/null 2>&1", shell=True
        )
        time.sleep(1)

        subprocess.run("systemctl daemon-reload", shell=True)

        subprocess.run("ip link set dev iran1config10 down > /dev/null", shell=True)
        subprocess.run("ip tunnel del iran1config10 > /dev/null", shell=True)

        print("Progress: ", end="")

        frames = ["⠋", "⠙", "⠹", "⠸", "⠼", "⠴", "⠦", "⠧", "⠇", "⠏"]
        delay = 0.1
        duration = 1
        end_time = time.time() + duration

        while time.time() < end_time:
            for frame in frames:
                print("\r[%s] Loading...  " % frame, end="")
                time.sleep(delay)
                print("\r[%s]             " % frame, end="")
                time.sleep(delay)

        display_checkmark("\033[92mUninstall completed!\033[0m")
    except subprocess.CalledProcessError as e:
        print("Error:", e.output.decode().strip())


def priv_kh6s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates16.sh"):
        with open("/etc/privates16.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config6 mtu" not in line
            ]

            with open("/etc/privates16.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates16.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh7s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates17.sh"):
        with open("/etc/privates17.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config7 mtu" not in line
            ]

            with open("/etc/privates17.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates17.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh8s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates18.sh"):
        with open("/etc/privates18.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config8 mtu" not in line
            ]

            with open("/etc/privates18.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates18.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh9s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates19.sh"):
        with open("/etc/privates19.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config9 mtu" not in line
            ]

            with open("/etc/privates19.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates19.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh10s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates110.sh"):
        with open("/etc/privates110.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config10 mtu" not in line
            ]

            with open("/etc/privates110.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates110.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


# iran mtu private
def priv_ir1s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates11.sh"):
        with open("/etc/privates11.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config1 mtu" not in line
            ]

            with open("/etc/privates11.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates11.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir2s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates12.sh"):
        with open("/etc/privates12.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config2 mtu" not in line
            ]

            with open("/etc/privates12.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates12.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir3s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates13.sh"):
        with open("/etc/privates13.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config3 mtu" not in line
            ]

            with open("/etc/privates13.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates13.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir4s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates14.sh"):
        with open("/etc/privates14.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config4 mtu" not in line
            ]

            with open("/etc/privates14.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates14.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir5s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates15.sh"):
        with open("/etc/privates15.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config5 mtu" not in line
            ]

            with open("/etc/privates15.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates15.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir6s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 6\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config6 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates16.sh"):
        with open("/etc/privates16.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config6 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config6 mtu" not in line
            ]

            with open("/etc/privates16.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates16.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir7s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 7\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config7 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates17.sh"):
        with open("/etc/privates17.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config7 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config7 mtu" not in line
            ]

            with open("/etc/privates17.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates17.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir8s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 8\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config8 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates18.sh"):
        with open("/etc/privates18.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config8 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config8 mtu" not in line
            ]

            with open("/etc/privates18.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates18.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir9s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 9\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config9 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates19.sh"):
        with open("/etc/privates19.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config9 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config9 mtu" not in line
            ]

            with open("/etc/privates19.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates19.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_ir10s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 10\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config10 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates110.sh"):
        with open("/etc/privates110.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config10 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config10 mtu" not in line
            ]

            with open("/etc/privates110.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates110.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")

def priv_kh1s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 1\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config1 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates11.sh"):
        with open("/etc/privates11.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config1 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config1 mtu" not in line
            ]

            with open("/etc/privates11.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates11.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh2s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 2\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config2 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates12.sh"):
        with open("/etc/privates12.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config2 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config2 mtu" not in line
            ]

            with open("/etc/privates12.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates12.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh3s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 3\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config3 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates13.sh"):
        with open("/etc/privates13.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config3 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config3 mtu" not in line
            ]

            with open("/etc/privates13.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates13.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh4s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 4\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config4 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates14.sh"):
        with open("/etc/privates14.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config4 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config4 mtu" not in line
            ]

            with open("/etc/privates14.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates14.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")


def priv_kh5s1_mtu():
    print("\033[93m───────────────────────────────────────\033[0m")
    display_notification("\033[93m             Server 5\033[0m")
    print("\033[93m───────────────────────────────────────\033[0m")
    mtu_value = input(
        "\033[93mEnter the \033[92mMTU value \033[93m[ \033[96mPrivate IP \033[93m]:\033[0m "
    )
    mtu_command = f"ip link set dev iran1config5 mtu {mtu_value}\n"

    if os.path.exists("/etc/privates15.sh"):
        with open("/etc/privates15.sh", "r") as file:
            sh_contents = file.readlines()

        if any("link set dev iran1config5 mtu" in line for line in sh_contents):
            sh_contents = [
                line
                for line in sh_contents
                if "link set dev iran1config5 mtu" not in line
            ]

            with open("/etc/privates15.sh", "w") as file:
                file.writelines(sh_contents)

        with open("/etc/privates15.sh", "a") as file:
            file.write(mtu_command)

        print("\033[92mMTU command edited successfully\033[0m")
        subprocess.run(mtu_command, shell=True)
    else:
        print("\033[91mCommand file doesn't exist\033[0m")

iran5_kharej10_mnu()
